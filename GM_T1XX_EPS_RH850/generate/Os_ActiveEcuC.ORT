/* file: C:/Hari/Work/SynergyProjects/T1xx_Synergy/BuildPrep/07.01.05_Work/Z_Work_1_8917_ShortTerm/GM_T1XX_EPS_RH850/generate/Os_ActiveEcuC.ORT */
/* automatically generated by genRH850.exe, Version: 1.06 */
/* Configuration file: C:/Users/nz2654/AppData/Local/Temp/DaVinci/Cfg-1345187/Generation/Cfg_Gen-1484071352018-0/OsProxyFiles-1484072167553-0/Os_ActiveEcuC.arxml */
/* Generation time: Tue Jan 10 13:16:13 2017 */
/* Unlimited license CBD1400351 for Nxtr Automotive, Project License, EPS */
/* Implementation: RH850_P1M */
/* Version of general code: 9.01.06 */

/***********************/
/* Declaration Section */
/***********************/

VERSION {
   KOIL = "2.2";
   OSSEMANTICS = "ORTI", "2.2";
};   /* VERSION */


IMPLEMENTATION Vector_ORTI_2_2 {
   OS {
      TOTRACE ENUM "unsigned short" [
         "NO_TASK" = 0xFFFF,
         "osSystemExtendedTask" = 0,
         "Task_InitBsw_Appl10" = 1,
         "Task_Init_Appl10" = 2,
         "Task_Init_Appl6" = 3,
         "Task_Shutdown_Appl0" = 4,
         "Task_4msBsw_Appl10" = 5,
         "Task_2msTmplMonr_Appl10" = 6,
         "Task_2ms_Appl10" = 7,
         "Task_2ms_Appl6" = 8,
         "Task_4ms_Appl10" = 9,
         "Task_10ms_Appl10" = 10,
         "Task_10ms_Appl6" = 11,
         "Task_10msBsw_Appl10" = 12,
         "Task_100ms_Appl10" = 13,
         "osSystemBasicTask" = 14
      ] RUNNINGTASK, "Running Task Identification";
      TOTRACE ENUM "unsigned short" [
         "NO_ISR" = 0xFFFF,
         "CanIsrGlobalStatus" = 0,
         "CanIsrRxFifo" = 1,
         "CanIsrStatus_0" = 2,
         "CanIsrStatus_1" = 3,
         "CanIsrTx_0" = 4,
         "CanIsrTx_1" = 5,
         "MCU_ECM_EIC_CAT2_ISR" = 6,
         "SPI_CSIG0_TIC_CAT2_ISR" = 7,
         "SPI_CSIG0_TIRE_CAT2_ISR" = 8,
         "SPI_CSIG0_TIR_CAT2_ISR" = 9,
         "SPI_CSIH0_TIC_CAT2_ISR" = 10,
         "SPI_CSIH0_TIRE_CAT2_ISR" = 11,
         "SPI_CSIH0_TIR_CAT2_ISR" = 12,
         "SPI_CSIH2_TIC_CAT2_ISR" = 13,
         "SPI_CSIH2_TIRE_CAT2_ISR" = 14,
         "SPI_CSIH2_TIR_CAT2_ISR" = 15,
         "SnsrMeasStrtIrq" = 16,
         "osOstmInterrupt_c0" = 17,
         "osSystemCat2ISR" = 18
      ] RUNNINGISR2, "Running ISR Identification";
      TOTRACE ENUM "unsigned char" [
         "NO_SERVICE"               =  0,
         "ActivateTask"             =  2,
         "TerminateTask"            =  4,
         "ChainTask"                =  6,
         "Schedule"                 =  8,
         "GetTaskID"                =  10,
         "GetTaskState"             =  12,
         "ResumeAllInterrupts"      =  14,
         "SuspendAllInterrupts"     =  16,
         "EnableAllInterrupts"      =  24,
         "DisableAllInterrupts"     =  26,
         "ResumeOSInterrupts"       =  28,
         "SuspendOSInterrupts"      =  30,
         "GetResource"              =  32,
         "ReleaseResource"          =  34,
         "SetEvent"                 =  36,
         "ClearEvent"               =  38,
         "GetEvent"                 =  40,
         "WaitEvent"                =  42,
         "GetAlarmBase"             =  44,
         "GetAlarm"                 =  46,
         "SetRelAlarm"              =  48,
         "SetAbsAlarm"              =  50,
         "CancelAlarm"              =  52,
         "IncrementCounter"         =  54,
         "StartScheduleTableRel"    =  56,
         "StartScheduleTableAbs"    =  58,
         "StopScheduleTable"        =  60,
         "GetScheduleTableStatus"   =  62,
         "NextScheduleTable"        =  64,
         "GetActiveApplicationMode" =  66,
         "StartOS"                  =  68,
         "ShutdownOS"               =  70,
         "ErrorHook"                =  72,
         "PreTaskHook"              =  74,
         "PostTaskHook"             =  76,
         "StartupHook"              =  78,
         "ShutdownHook"             =  80,
         "IdleEntry"                =  104,
         "StartDispatch"            =  108,
         "GetISRID"                 =  110,
         "SyncScheduleTable"        =  126,
         "SetScheduleTableAsync"    =  128,
         "StartScheduleTableSynchron" =  134
      ] SERVICETRACE, "OS Services Watch";
      ENUM "unsigned short" [
         "-" = 0xFFFF,
         "99" = 0,
         "98" = 1,
         "97" = 2,
         "96" = 3,
         "90" = 4,
         "82" = 5,
         "81" = 6,
         "81" = 7,
         "80" = 8,
         "70" = 9,
         "62" = 10,
         "61" = 11,
         "60" = 12,
         "60" = 13,
         "51" = 14,
         "0" = 15,
         "0" = 16
      ] RUNNINGTASKPRIORITY, "Priority of Running Task";

      ENUM "unsigned char" [
         "E_OK"                      =  0,
         "E_OS_ACCESS"               =  1,
         "E_OS_CALLEVEL"             =  2,
         "E_OS_ID"                   =  3,
         "E_OS_LIMIT"                =  4,
         "E_OS_NOFUNC"               =  5,
         "E_OS_RESOURCE"             =  6,
         "E_OS_STATE"                =  7,
         "E_OS_VALUE"                =  8,
         "E_OS_SERVICEID"            =  9,
         "E_OS_ILLEGAL_ADDRESS"      = 10,
         "E_OS_MISSINGEND"           = 11,
         "E_OS_DISABLEDINT"          = 12,
         "E_OS_STACKFAULT"           = 13,
         "E_OS_PROTECTION_MEMORY"    = 14,
         "E_OS_PROTECTION_TIME"      = 15,
         "E_OS_PROTECTION_ARRIVAL"   = 16,
         "E_OS_PROTECTION_LOCKED"    = 17,
         "E_OS_PROTECTION_EXCEPTION" = 18,
         "E_OS_SYS_ASSERTION"        = 20,
         "E_OS_SYS_ABORT"            = 21,
         "E_OS_SYS_API_ERROR"        = 23,
         "E_OS_SYS_ALARM_MANAGEMENT" = 24,
         "E_OS_SYS_WARNING"          = 25
      ] LASTERROR, "Last OSEK Error";

      ENUM "unsigned short" [
         "-" = 0,
         "GetSemaphore: Wrong semaphore ID                                                  "   = 0xc101,
         "GetSemaphore: Called on interrupt level                                           "   = 0xc102,
         "GetSemaphore: Called by basic task                                                "   = 0xc103,
         "GetSemaphore: Called with occupied resources                                      "   = 0xc104,
         "GetSemaphore: Called with interrupts disabled by an OSEK API function             "   = 0xc105,
         "ReleaseSemaphore: Wrong semaphore ID                                              "   = 0xc201,
         "ReleaseSemaphore: Called by basic task                                            "   = 0xc202,
         "ReleaseSemaphore: Semaphore is not occupied                                       "   = 0xc203,
         "ReleaseSemaphore: Task waiting for this semaphore has wrong priority              "   = 0xc204,
         "ReleaseSemaphore: Called with interrupts disabled by an OSEK API function         "   = 0xc205,
         "ActivateTask: Called with invalid task ID                                           "   = 0x1101,
         "ActivateTask: Task has wrong priority level                                         "   = 0x1102,
         "ActivateTask: Number of activation exceeds limit                                    "   = 0x1103,
         "ActivateTask: Interrupts are disabled with functions provided by OSEK               "   = 0x1104,
         "ActivateTask: Number of activation exceeds limit (task activation is performed by alarm-expiration)         "   = 0x1105,
         "ActivateTask: Caller has no access rights for the task                              "   = 0x1106,
         "ActivateTask: API function was called in wrong context                              "   = 0x1107,
         "TerminateTask: Called with disabled interrupts                                     "   = 0x1201,
         "TerminateTask: Called with occupied resources                                      "   = 0x1202,
         "TerminateTask: Attempted for a task with activation counter == 0 (not activated)   "   = 0x1203,
         "TerminateTask: Called from an interrupt service routine                            "   = 0x1204,
         "TerminateTask: TerminateTask has tried to start the Scheduler without success      "   = 0x1205,
         "TerminateTask: API function was called in wrong context                            "   = 0x1206,
         "ChainTask: Called with disabled interrupts                                         "   = 0x1301,
         "ChainTask: Called with occupied resources                                          "   = 0x1302,
         "ChainTask: New task has invalid ID                                                 "   = 0x1303,
         "ChainTask: Tried to terminate a task which have an activation counter which is zero"   = 0x1304,
         "ChainTask: Number of activation of new task exceeds limit                          "   = 0x1305,
         "ChainTask: Called on interrupt level                                               "   = 0x1306,
         "ChainTask: Task has wrong priority level                                           "   = 0x1307,
         "ChainTask: ChainTask has tried to start the Scheduler without success              "   = 0x1308,
         "ChainTask: API function was called in wrong context                                "   = 0x1309,
         "ChainTask: Caller has no access rights for the task                                "   = 0x130A,
         "Schedule: Called with disabled interrupts                                          "   = 0x1401,
         "Schedule: Called on interrupt level                                                "   = 0x1402,
         "Schedule: Called from task with enabled stack sharing by setting NotUsingSchedule in the OIL-configurator   "   = 0x1403,
         "Schedule: Called with an occupied resource                                         "   = 0x1405,
         "Schedule: Called from invalid context                                              "   = 0x1406,
         "GetTaskState: Called with invalid task ID                                          "   = 0x1501,
         "GetTaskState: Interrupts are disabled with functions provided by OSEK              "   = 0x1502,
         "GetTaskState: Caller has no write access rights for address argument               "   = 0x1503,
         "GetTaskState: Called from invalid call context                                     "   = 0x1504,
         "GetTaskState: Calling application has no access rights for this task               "   = 0x1505,
         "GetTaskID: Interrupts are disabled with functions provided by OSEK                 "   = 0x1601,
         "GetTaskID: Calling application has no access rights for this task                  "   = 0x1602,
         "GetTaskID: Called from invalid call context                                        "   = 0x1603,
         "Exit of task without the call of TerminateTask or ChainTask                        "   = 0x1701,
         "EnableAllInterrupts: DisableAllInterrupts not called before                        "   = 0x2401,
         "DisableAllInterrupts: Interrupts are disabled with functions provided by OSEK      "   = 0x2501,
         "An unhandled exception or interrupt was detected                                   "   = 0x2801,
         "osSaveDisableLevelNested: Wrong counter value detected                             "   = 0x2901,
         "osRestoreEnableLevelNested: Wrong counter value detected                           "   = 0x2A01,
         "osSaveDisableGlobalNested: Wrong counter value detected                            "   = 0x2B01,
         "osRestoreEnableGlobalNested: Wrong counter value detected                          "   = 0x2C01,
         "GetResource: Invalid resource ID                                                   "   = 0x3101,
         "GetResource: Ceiling priority of the specified resource already in use             "   = 0x3102,
         "GetResource: Resource already occupied                                             "   = 0x3103,
         "GetResource: Task has no access to the specified resource                          "   = 0x3104,
         "GetResource: Specified resource has a wrong priority. Possible reason: The task has no access rights to this resource" = 0x3105,
         "GetResource: Interrupts are disabled with functions provided by OSEK               "   = 0x3106,
         "GetResource: Calling application has no access rights for this resource            "   = 0x3107,
         "GetResource: Called from invalid call context                                      "   = 0x3108,
         "GetResource: Calling ISR has no access rights for this resource                    "   = 0x3109,
         "ReleaseResource: Invalid resource ID                                               "   = 0x3201,
         "ReleaseResource: Ceiling priority of the resource not found in the ready bit field "   = 0x3202,
         "ReleaseResource: Resource occupied by a different task                             "   = 0x3203,
         "ReleaseResource: Specified resource has a wrong priority. Possible reason: The task has no access rights to this resource" = 0x3204,
         "ReleaseResource: The specified resource is not occupied by the task                "   = 0x3206,
         "ReleaseResource: At least one other resource must be released before               "   = 0x3207,
         "ReleaseResource: Interrupts are disabled with functions provided by OSEK           "   = 0x3208,
         "ReleaseResource: Calling application has no access rights for this resource        "   = 0x3209,
         "ReleaseResource: Called from invalid call context                                  "   = 0x320A,
         "ReleaseResource: Calling ISR has no access rights for this resource                "   = 0x320B,
         "SetEvent: Invalid task ID                                                          "   = 0x4101,
         "SetEvent: Cannot call SetEvent to basic task                                       "   = 0x4102,
         "SetEvent: Cannot SetEvent to task in SUSPENDED state                               "   = 0x4103,
         "SetEvent: Wrong task priority detected                                             "   = 0x4104,
         "SetEvent: Interrupts are disabled with functions provided by OSEK                  "   = 0x4105,
         "SetEvent: Called from invalid call context                                         "   = 0x4106,
         "SetEvent: Caller has no access rights for this task                                "   = 0x4107,
         "ClearEvent: A basic task cannot clear an event                                     "   = 0x4201,
         "ClearEvent: Called on interrupt level                                              "   = 0x4202,
         "ClearEvent: Interrupts are disabled with functions provided by OSEK                "   = 0x4203,
         "ClearEvent: Called from wrong context                                              "   = 0x4204,
         "GetEvent: Invalid task ID                                                          "   = 0x4301,
         "GetEvent: Cannot GetEvent from basic task                                          "   = 0x4302,
         "GetEvent: Cannot GetEvent from a task in SUSPENDED state                           "   = 0x4303,
         "GetEvent: Interrupts are disabled with functions provided by OSEK                  "   = 0x4304,
         "GetEvent: Caller has no write access rights for address argument                   "   = 0x4305,
         "GetEvent: Called from invalid call context                                         "   = 0x4306,
         "GetEvent: Calling application has no access rights for this task                   "   = 0x4307,
         "WaitEvent: Called by basic task                                                    "   = 0x4401,
         "WaitEvent: Called with occupied resources                                          "   = 0x4402,
         "WaitEvent: Called with disabled interrupts                                         "   = 0x4403,
         "WaitEvent: Called on interrupt level                                               "   = 0x4404,
         "WaitEvent: Called from invalid call context                                        "   = 0x4405,
         "GetAlarmBase: Invalid alarm ID                                                     "   = 0x5101,
         "GetAlarmBase: Interrupts are disabled with functions provided by OSEK              "   = 0x5102,
         "GetAlarmBase: Caller has no write access rights for address argument               "   = 0x5103,
         "GetAlarmBase: Called from invalid call context                                     "   = 0x5104,
         "GetAlarmBase: Calling application has no access rights for this alarm              "   = 0x5105,
         "GetAlarm: Invalid alarm ID                                                         "   = 0x5201,
         "GetAlarm: Alarm not active                                                         "   = 0x5202,
         "GetAlarm: Interrupts are disabled with functions provided by OSEK                  "   = 0x5203,
         "GetAlarm: Caller has no write access rights for address argument                   "   = 0x5204,
         "GetAlarm: Called from invalid call context                                         "   = 0x5205,
         "GetAlarm: Calling application has no access rights for this alarm                  "   = 0x5206,
         "SetRelAlarm: Invalid alarm id                                                      "   = 0x5301,
         "SetRelAlarm: Alarm already active                                                  "   = 0x5302,
         "SetRelAlarm: Specified cycle is out of range                                       "   = 0x5303,
         "SetRelAlarm: Specified delta is out of range                                       "   = 0x5304,
         "SetRelAlarm: Interrupts are disabled with functions provided by OSEK               "   = 0x5305,
         "SetRelAlarm: Called with parameter increment set to zero                           "   = 0x5306,
         "SetRelAlarm: Called from invalid call context                                      "   = 0x5307,
         "SetRelAlarm: Calling application has no access rights for this alarm               "   = 0x5308,
         "SetAbsAlarm: Invalid alarm ID                                                      "   = 0x5401,
         "SetAbsAlarm: Alarm already active                                                  "   = 0x5402,
         "SetAbsAlarm: Specified cycle is out of range                                       "   = 0x5403,
         "SetAbsAlarm: Specified start is out of range                                       "   = 0x5404,
         "SetAbsAlarm: Interrupts are disabled with functions provided by OSEK               "   = 0x5405,
         "SetAbsAlarm: Called from invalid call context                                      "   = 0x5406,
         "SetAbsAlarm: Calling application has no access rights for this alarm               "   = 0x5407,
         "CancelAlarm: Invalid alarm ID                                                      "   = 0x5501,
         "CancelAlarm: Alarm not active                                                      "   = 0x5502,
         "CancelAlarm: Interrupts are disabled with functions provided by OSEK               "   = 0x5503,
         "CancelAlarm: Internal error detected while alarm was canceled                      "   = 0x5504,
         "CancelAlarm: Called from invalid call context                                      "   = 0x5505,
         "CancelAlarm: Calling application has no access rights for this alarm               "   = 0x5506,
         "Task stack overflow detected                                                       "   = 0x6101,
         "Scheduler called with enabled interrupts                                           "   = 0x6201,
         "Called with invalid task ID                                                        "   = 0x6301,
         "Wrong library linked to application                                                "   = 0x6401,
         "ErrorHook called with enabled interrupts                                           "   = 0x6501,
         "StartOS failed while initializing memory.                                          "   = 0x6601,
         "StartOS tried to activate the Scheduler without success.                           "   = 0x6602,
         "StartOS was called with an invalid parameter value.                                "   = 0x6603,
         "StartScheduleTableRel: invalid schedule table ID.                                  "   = 0x7101,
         "StartScheduleTableRel: schedule table already running or next.                     "   = 0x7102,
         "StartScheduleTableRel: parameter Offset set to zero.                               "   = 0x7103,
         "StartScheduleTableRel: parameter Offset bigger than MAXALLOWEDVALUE of the respective counter.       "   = 0x7104,
         "StartScheduleTableRel: called with disabled interrupts.                            "   = 0x7105,
         "StartScheduleTableRel: Called from invalid call context                            "   = 0x7106,
         "StartScheduleTableRel: Calling application has no access rights for this schedule table               "   = 0x7107,
         "StartScheduleTableRel: called for an implicitly synchronized ScheduleTable        "   = 0x7109,
         "StartScheduleTableAbs: invalid schedule table ID.                                  "   = 0x7201,
         "StartScheduleTableAbs: schedule table already running or next.                     "   = 0x7202,
         "StartScheduleTableAbs: parameter TickValue bigger than MAXALLOWEDVALUE of the respective counter.       "   = 0x7203,
         "StartScheduleTableAbs: called with disabled interrupts.                            "   = 0x7204,
         "StartScheduleTableAbs: Called from invalid call context                            "   = 0x7205,
         "StartScheduleTableAbs: Calling application has no access rights for this schedule table               "   = 0x7206,
         "StopScheduleTable: invalid schedule table ID.                                      "   = 0x7301,
         "StopScheduleTable: schedule table already stopped or next.                         "   = 0x7302,
         "StopScheduleTable: called with disabled interrupts.                                "   = 0x7303,
         "StopScheduleTable: Called from invalid call context                                "   = 0x7304,
         "StopScheduleTable: Calling application has no access rights for this schedule table    "   = 0x7305,
         "StopScheduleTable: internal error    "   = 0x7306,
         "GetScheduleTableStatus: invalid schedule table ID.                                      "   = 0x7401,
         "GetScheduleTableStatus: called with disabled interrupts.                                "   = 0x7402,
         "GetScheduleTableStatus: Called from invalid call context                                "   = 0x7403,
         "GetScheduleTableStatus: Calling application has no access rights for this schedule table    "   = 0x7404,
         "GetScheduleTableStatus: Caller has no write access rights for address argument          "   = 0x7405,
         "NextScheduleTable: invalid schedule table ID (current)                               "   = 0x7501,
         "NextScheduleTable: invalid schedule table ID (next)                                  "   = 0x7502,
         "NextScheduleTable: schedule table not running                                        "   = 0x7503,
         "NextScheduleTable: schedule table already running or next                            "   = 0x7504,
         "NextScheduleTable: counters are different                                            "   = 0x7505,
         "NextScheduleTable: called with disabled interrupts.                                  "   = 0x7506,
         "NextScheduleTable: Called from invalid call context                                  "   = 0x7507,
         "NextScheduleTable: Calling application has no access rights for this Scheduletable   "   = 0x7508,
         "An invalid action was found in a schedule table                                      "   = 0x7601,
         "An internal error occured                                                            "   = 0x7602,
         "IncrementCounter: invalid counter Id or hardware counter                             "   = 0x8101,
         "IncrementCounter: called with disabled interrupts                                    "   = 0x8102,
         "IncrementCounter: Called from invalid call context                                   "   = 0x8103,
         "IncrementCounter: Calling application has no access rights for this counter          "   = 0x8104,
         "GetISRID: called with disabled interrupts                                            "   = 0x8201,
         "GetISRID:Called from invalid call context                                            "   = 0x8202,
         "CallTrustedFunction: Invalid function index for trusted function                     "   = 0x9301,
         "CallTrustedFunction: Called from invalid call context                                "   = 0x9302,
         "CallTrustedFunction: called with disabled interrupts                                 "   = 0x9303,
         "TerminateApplication:  Invalid restart option                                        "   = 0x9401,
         "TerminateApplication:  Called from invalid call context                              "   = 0x9402,
         "TerminateApplication: called with disabled interrupts                                "   = 0x9403,
         "SyncScheduleTable: Called from invalid call context                                  "   = 0x9501,
         "SyncScheduleTable:  Called with wrong schedule table ID                              "   = 0x9502,
         "SyncScheduleTable: Calling application has no access rights for this schedule table  "   = 0x9503,
         "SyncScheduleTable: called with disabled interrupts                                   "   = 0x9504,
         "SyncScheduleTable: The Schedule table is currently not running                       "   = 0x9505,
         "SyncScheduleTable:  The Global Time is larger than the LENGTH of the schedule table  "   = 0x9506,
         "SyncScheduleTable: Schedule table which is not explicitly synchronized.              "   = 0x9507,
         "SetScheduleTableAsync: Called from invalid call context                              "   = 0x9601,
         "SetScheduleTableAsync:  Called with wrong schedule table ID                          "   = 0x9602,
         "SetScheduleTableAsync: Calling application has no access rights for this schedule table  "   = 0x9603,
         "SetScheduleTableAsync: called with disabled interrupts                               "   = 0x9604,
         "BlockingTimeMonitoring: A blocking time measurement was started that is already running   "   = 0x9702,
         "BlockingTimeMonitoring: A blocking time measurement cannot be started due to invalid process id  "   = 0x9703,
         "BlockingTimeMonitoring: A blocking time measurement cannot be stopped due to invalid process id  "   = 0x9703,
         "osGetTaskMaxExecutionTime:  invalid task identifier                                    "   = 0x9801,
         "osGetTaskMaxExecutionTime:   The calling application has no access rights for this task"   = 0x9802,
         "osGetTaskMaxExecutionTime:   The caller has no access rights for this memory region    "   = 0x9803,
         "osGetISRMaxExecutionTime:  invalid task identifier                                     "   = 0x9901,
         "osGetISRMaxExecutionTime:   The calling application has no access rights for this task "   = 0x9902,
         "osGetISRMaxExecutionTime:   The caller has no access rights for this memory region     "   = 0x9903,
         "osGetTaskMaxBlockingTime:  invalid task identifier                                     "   = 0x9a01,
         "osGetTaskMaxBlockingTime:  invalid blocking type                                       "   = 0x9a02,
         "osGetTaskMaxBlockingTime:  invalid resource Id                                         "   = 0x9a03,
         "osGetTaskMaxBlockingTime:   The calling application has no access rights for this task "   = 0x9a04,
         "osGetTaskMaxBlockingTime:   The calling application has no access rights for this resource   "   = 0x9a05,
         "osGetTaskMaxBlockingTime:   The caller has no access rights for this memory region     "   = 0x9a06,
         "osGetISRMaxBlockingTime:  invalid task identifier                                      "   = 0x9b01,
         "osGetISRMaxBlockingTime:  invalid blocking type                                        "   = 0x9b02,
         "osGetISRMaxBlockingTime:  invalid resource Id                                          "   = 0x9b03,
         "osGetISRMaxBlockingTime:   The calling application has no access rights for this task  "   = 0x9b04,
         "osGetISRMaxBlockingTime:   The calling application has no access rights for this resource     "   = 0x9b05,
         "osGetISRMaxBlockingTime:   The caller has no access rights for this memory region      "   = 0x9b06,
         "StartScheduleTableSynchron: Called from invalid call context                         "   = 0x9c01,
         "StartScheduleTableSynchron:  Called with wrong schedule table ID                     "   = 0x9c02,
         "StartScheduleTableSynchron: Calling application has no access rights for this schedule table       "   = 0x9c03,
         "StartScheduleTableSynchron: called with disabled interrupts                          "   = 0x9c04,
         "StartScheduleTableSynchron: ST already running or nexted                             "   = 0x9c05,
         "StartScheduleTableSynchron: The offset to Global Time is larger than the LENGTH of the schedule table    "   = 0x9c06,
         "StartScheduleTableSynchron: Schedule table is not explicitly synchronized.           "   = 0x9c08,
         "ExecutionTimeMonitoring: invalid Id detected                                         "   = 0x9d01,
         "ISR exit: An ISR of category 2 was left with resources still occupied.               "   = 0x9e01,
         "ISR exit: An ISR of category 2 was left with interrupts disabled                     "   = 0x9e02,
         "osGetTaskMinInterArrivalTime: Called with wrong task id                                "   = 0x9001,
         "osGetTaskMinInterArrivalTime: Calling application has no access rights for this task   "   = 0x9002,
         "osGetTaskMinInterArrivalTime: Illegal address                                          "   = 0x9003,
         "osGetISRMinInterArrivalTime: Called with wrong ISR id                                  "   = 0x9f01,
         "osGetISRMinInterArrivalTime: Calling application has no access rights for this ISR     "   = 0x9f02,
         "osGetISRMinInterArrivalTime: Illegal address                                           "   = 0x9f03
      ] vs_osCANlastError, "Last osCAN Error";

      ENUM "unsigned char" [
         "OSDEFAULTAPPMODE"   = 0x01
      ] CURRENTAPPMODE, "Current application mode";
   }, "OS";   /* OS */


   TASK {
      ENUM "unsigned short" [
         "99" = 0,
         "98" = 1,
         "97" = 2,
         "96" = 3,
         "90" = 4,
         "82" = 5,
         "81" = 6,
         "81" = 7,
         "80" = 8,
         "70" = 9,
         "62" = 10,
         "61" = 11,
         "60" = 12,
         "60" = 13,
         "51" = 14,
         "0" = 15,
         "0" = 16
      ] PRIORITY, "Actual Prio";
      STRING vs_HomePriority, "Home Prio";
      ENUM "unsigned char" [
         "READY"=0,
         "RUNNING"=1,
         "WAITING"=2,
         "READY"=3,
          "SUSPENDED"=4,
          "WAIT_SEMAPHORE"=5
      ] STATE, "State";
      ENUM "void*" [
         "osIntStackLevel13_c0" : osIntStackLevel13_c0 = "osIntStackLevel13_c0",
         "osIntStackLevel14_c0" : osIntStackLevel14_c0 = "osIntStackLevel14_c0",
         "osIntStackLevel15_c0" : osIntStackLevel15_c0 = "osIntStackLevel15_c0",
         "osIntStackLevel3_c0" : osIntStackLevel3_c0 = "osIntStackLevel3_c0",
         "osSystemStack_c0" : osSystemStack_c0 = "osSystemStack_c0",
         "osTaskStackAppl00" : osTaskStackAppl00 = "osTaskStackAppl00",
         "osTaskStackAppl100" : osTaskStackAppl100 = "osTaskStackAppl100",
         "osTaskStackAppl101" : osTaskStackAppl101 = "osTaskStackAppl101",
         "osTaskStackAppl102" : osTaskStackAppl102 = "osTaskStackAppl102",
         "osTaskStackAppl103" : osTaskStackAppl103 = "osTaskStackAppl103",
         "osTaskStackAppl104" : osTaskStackAppl104 = "osTaskStackAppl104",
         "osTaskStackAppl105" : osTaskStackAppl105 = "osTaskStackAppl105",
         "osTaskStackAppl106" : osTaskStackAppl106 = "osTaskStackAppl106",
         "osTaskStackAppl107" : osTaskStackAppl107 = "osTaskStackAppl107",
         "osTaskStackAppl108" : osTaskStackAppl108 = "osTaskStackAppl108",
         "osTaskStackAppl60" : osTaskStackAppl60 = "osTaskStackAppl60",
         "osTaskStackAppl61" : osTaskStackAppl61 = "osTaskStackAppl61",
         "osTaskStackAppl62" : osTaskStackAppl62 = "osTaskStackAppl62",
         "osTaskStackosSystemApplicationCore00" : osTaskStackosSystemApplicationCore00 = "osTaskStackosSystemApplicationCore00",
         "osTaskStackosSystemApplicationCore01" : osTaskStackosSystemApplicationCore01 = "osTaskStackosSystemApplicationCore01"
      ] STACK, "Task Stack";
      STRING vs_TaskType, "Task Type";
      STRING vs_Schedule, "Schedule";
      CTYPE "unsigned char" vs_WaitMask, "Wait Mask";

      CTYPE "unsigned char" vs_EventFlag, "Event Flag";

      CTYPE "unsigned char" CURRENTACTIVATIONS, "Activations";
      STRING vs_MaxActivations, "max. Activations";
      ENUM "unsigned short" [
         "Context_osSystemExtendedTask" : Context_osSystemExtendedTask = 0,
         "Context_Task_InitBsw_Appl10" : Context_Task_InitBsw_Appl10 = 1,
         "Context_Task_Init_Appl10" : Context_Task_Init_Appl10 = 2,
         "Context_Task_Init_Appl6" : Context_Task_Init_Appl6 = 3,
         "Context_Task_Shutdown_Appl0" : Context_Task_Shutdown_Appl0 = 4,
         "Context_Task_4msBsw_Appl10" : Context_Task_4msBsw_Appl10 = 5,
         "Context_Task_2msTmplMonr_Appl10" : Context_Task_2msTmplMonr_Appl10 = 6,
         "Context_Task_2ms_Appl10" : Context_Task_2ms_Appl10 = 7,
         "Context_Task_2ms_Appl6" : Context_Task_2ms_Appl6 = 8,
         "Context_Task_4ms_Appl10" : Context_Task_4ms_Appl10 = 9,
         "Context_Task_10ms_Appl10" : Context_Task_10ms_Appl10 = 10,
         "Context_Task_10ms_Appl6" : Context_Task_10ms_Appl6 = 11,
         "Context_Task_10msBsw_Appl10" : Context_Task_10msBsw_Appl10 = 12,
         "Context_Task_100ms_Appl10" : Context_Task_100ms_Appl10 = 13,
         "Context_osSystemBasicTask" : Context_osSystemBasicTask = 14
      ] CONTEXT, "Task Context";

   }, "Tasks";   /* TASK */


   CONTEXT {
      CTYPE "unsigned char" VALID;
   }, "Task Context";   /* CONTEXT */


   STACK {
      CTYPE "unsigned short" SIZE, "Stack Size (Byte)";
      CTYPE "unsigned short*" BASEADDRESS, "Stack Start Address";
      STRING STACKDIRECTION, "Stack Direction";
      CTYPE "unsigned long" FILLPATTERN, "Stack Fill Pattern";
   }, "Stacks";   /* STACK */


   vs_Event {
      STRING vs_EventMask, "Event Mask";
   }, "Events";   /* Events */


   ALARM {
      ENUM "unsigned char" [
         "STOPPED" = 0,
         "RUNNING" = 1
      ] STATE, "Alarm State";
      CTYPE "unsigned long" CYCLETIME, "Cycle Time (Ticks)";
      CTYPE "unsigned long" vs_CycleTime_ms, "Cycle Time (ms)";
      CTYPE "unsigned long" ALARMTIME, "Alarm Time (Ticks)";
      CTYPE "unsigned long" vs_AlarmTime_ms, "Alarm Time (ms)";
      STRING ACTION, "Action";
      STRING COUNTER, "Counter";
   }, "Alarms";   /* Alarms */

   RESOURCE {
      ENUM "unsigned char" [
         "LOCKED"=1,
         "UNLOCKED"=0
      ] STATE, "Resource State";
      ENUM "unsigned short" [
         "ISR"=0xFFFF,
         "osSystemExtendedTask" = 0,
         "Task_2ms_Appl10" = 7,
         "Task_2ms_Appl6" = 8,
         "Task_4ms_Appl10" = 9,
         "Task_10ms_Appl10" = 10,
         "Task_10ms_Appl6" = 11,
         "Task_10msBsw_Appl10" = 12,
         "Task_100ms_Appl10" = 13,
         "-" = 0xFFFE
      ] LOCKER, "Resource Locker";
      STRING PRIORITY, "Ceiling priority";
   }, "Resources";   /* Resources */


   vs_SCHEDULETABLE {
      ENUM "unsigned char" [
         "SCHEDULETABLE_STOPPED"=0,
         "SCHEDULETABLE_NEXT"=1,
         "SCHEDULETABLE_WAITING"=2,
         "SCHEDULETABLE_RUNNING"=3,
         "SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS"=4
      ] vs_STATE, "Scheduletable State";
      ENUM "unsigned short" [
          "osSystemSchT"=0
      ]  vs_ScheduleTableNext, "Next Scheduletable";
      ENUM "unsigned short" [
          "0->internal"=0,
          "1"=1,
          "2"=2,
          "2->internal"=3
      ]  vs_ExpiryPointNext, "Next expiry point (Ticks)";
   }, "Scheduletable";   /* SCHEDULETABLE */


   vs_OS_Config {
      ENUM "unsigned short" [
         "BCC1" = 0,
         "BCC2" = 1,
         "ECC1" = 2,
         "ECC2" = 3
      ] vs_CC,"Conformance Class";
      ENUM "unsigned short" [
         "SC1" = 0,
         "SC2" = 1,
         "SC3" = 2,
         "SC4" = 3
      ] vs_SCALABILITYCLASS,"Scalability Class";
      ENUM "unsigned short" [
         "STANDARD" = 0,
         "EXTENDED" = 1
      ] vs_STATUS_LEVEL, "Status Level";
      ENUM "unsigned short" [
         "NON-Preempt" = 0,
         "FULL-Preempt" = 1,
         "MIXED-Preempt" = 2
      ] vs_SCHEDULE, "Schedule";
      ENUM "unsigned short" [
         "STANDARD" = 0,
         "Additional" = 1
      ] vs_OSInternalChecks, "OS internal checks";
      CTYPE "unsigned char" vs_OS_MAJ_VERSION, "OS Major-Release (OS)";
      CTYPE "unsigned char" vs_OS_MIN_VERSION, "OS Minor-Release (OS)";
      CTYPE "unsigned char" vs_GEN_MAJ_VERSION, "Generator Major-Release";
      CTYPE "unsigned char" vs_GEN_MIN_VERSION, "Generator Minor-Release";
      CTYPE "unsigned char" vs_STACKMONITORING, "Stack Monitoring";
      CTYPE "unsigned char" vs_ScheduletablesUsed, "ScheduleTables used";
      CTYPE "unsigned char" vs_SynchronizationUsed, "Synchronization used";
      CTYPE "unsigned char" vs_HRSTUsed, "HighResolution ScheduleTables used";
      CTYPE "unsigned char" vs_TimingProtectionUsed, "TimingProtection used";
   }, "OS Configuration"; /* OS Configuration */

}; /* END OF IMPLEMENTATION */


/***********************/
/* Information Section */
/***********************/

OS RH850_P1M {
   RUNNINGTASK = "osConfigBlock.CcbAddress[0]->LockIsNotNeeded.ossActiveTaskIndex";
   RUNNINGISR2 = "osConfigBlock.CcbAddress[0]->LockIsNotNeeded.ossActiveISRID";
   SERVICETRACE = "osConfigBlock.CcbAddress[0]->LockIsNotNeeded.ossORTICurrentServiceId";
   RUNNINGTASKPRIORITY = "osConfigBlock.CcbAddress[0]->LockIsNotNeeded.ossActiveTaskPrio";
   LASTERROR = "osConfigBlock.CcbAddress[0]->LockIsNotNeeded.ossLastErrorCode";
   vs_osCANlastError = "osConfigBlock.CcbAddress[0]->LockIsNotNeeded.ossLastError";
   CURRENTAPPMODE = "1";
};   /* OS */

TASK osSystemExtendedTask {
   PRIORITY = "osTcbActualPrio[0]";
   vs_HomePriority = "0";
   STATE = "osTcbTaskState[0]";
   STACK = "osTaskStackosSystemApplicationCore00";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "EXTENDED";
   vs_WaitMask = "osTcbWaitEventMask[0]";
   vs_EventFlag = "osTcbSetEventMask[0]";
   CURRENTACTIVATIONS = "osTcbActivationCount[0]";
   vs_MaxActivations = "1";
   CONTEXT="0";
};   /* osSystemExtendedTask*/

TASK Task_InitBsw_Appl10 {
   PRIORITY = "osTcbActualPrio[1]";
   vs_HomePriority = "99";
   STATE = "osTcbTaskState[1]";
   STACK = "osTaskStackAppl100";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[1]";
   vs_MaxActivations = "1";
   CONTEXT="1";
};   /* Task_InitBsw_Appl10*/

TASK Task_Init_Appl10 {
   PRIORITY = "osTcbActualPrio[2]";
   vs_HomePriority = "98";
   STATE = "osTcbTaskState[2]";
   STACK = "osTaskStackAppl101";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[2]";
   vs_MaxActivations = "1";
   CONTEXT="2";
};   /* Task_Init_Appl10*/

TASK Task_Init_Appl6 {
   PRIORITY = "osTcbActualPrio[3]";
   vs_HomePriority = "97";
   STATE = "osTcbTaskState[3]";
   STACK = "osTaskStackAppl60";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[3]";
   vs_MaxActivations = "1";
   CONTEXT="3";
};   /* Task_Init_Appl6*/

TASK Task_Shutdown_Appl0 {
   PRIORITY = "osTcbActualPrio[4]";
   vs_HomePriority = "96";
   STATE = "osTcbTaskState[4]";
   STACK = "osTaskStackAppl00";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[4]";
   vs_MaxActivations = "1";
   CONTEXT="4";
};   /* Task_Shutdown_Appl0*/

TASK Task_4msBsw_Appl10 {
   PRIORITY = "osTcbActualPrio[5]";
   vs_HomePriority = "90";
   STATE = "osTcbTaskState[5]";
   STACK = "osTaskStackAppl102";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[5]";
   vs_MaxActivations = "1";
   CONTEXT="5";
};   /* Task_4msBsw_Appl10*/

TASK Task_2msTmplMonr_Appl10 {
   PRIORITY = "osTcbActualPrio[6]";
   vs_HomePriority = "82";
   STATE = "osTcbTaskState[6]";
   STACK = "osTaskStackAppl103";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[6]";
   vs_MaxActivations = "1";
   CONTEXT="6";
};   /* Task_2msTmplMonr_Appl10*/

TASK Task_2ms_Appl10 {
   PRIORITY = "osTcbActualPrio[7]";
   vs_HomePriority = "81";
   STATE = "osTcbTaskState[7]";
   STACK = "osTaskStackAppl104";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[7]";
   vs_MaxActivations = "1";
   CONTEXT="7";
};   /* Task_2ms_Appl10*/

TASK Task_2ms_Appl6 {
   PRIORITY = "osTcbActualPrio[8]";
   vs_HomePriority = "80";
   STATE = "osTcbTaskState[8]";
   STACK = "osTaskStackAppl61";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[8]";
   vs_MaxActivations = "1";
   CONTEXT="8";
};   /* Task_2ms_Appl6*/

TASK Task_4ms_Appl10 {
   PRIORITY = "osTcbActualPrio[9]";
   vs_HomePriority = "70";
   STATE = "osTcbTaskState[9]";
   STACK = "osTaskStackAppl105";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[9]";
   vs_MaxActivations = "1";
   CONTEXT="9";
};   /* Task_4ms_Appl10*/

TASK Task_10ms_Appl10 {
   PRIORITY = "osTcbActualPrio[10]";
   vs_HomePriority = "62";
   STATE = "osTcbTaskState[10]";
   STACK = "osTaskStackAppl106";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[10]";
   vs_MaxActivations = "1";
   CONTEXT="10";
};   /* Task_10ms_Appl10*/

TASK Task_10ms_Appl6 {
   PRIORITY = "osTcbActualPrio[11]";
   vs_HomePriority = "61";
   STATE = "osTcbTaskState[11]";
   STACK = "osTaskStackAppl62";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[11]";
   vs_MaxActivations = "1";
   CONTEXT="11";
};   /* Task_10ms_Appl6*/

TASK Task_10msBsw_Appl10 {
   PRIORITY = "osTcbActualPrio[12]";
   vs_HomePriority = "60";
   STATE = "osTcbTaskState[12]";
   STACK = "osTaskStackAppl107";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[12]";
   vs_MaxActivations = "1";
   CONTEXT="12";
};   /* Task_10msBsw_Appl10*/

TASK Task_100ms_Appl10 {
   PRIORITY = "osTcbActualPrio[13]";
   vs_HomePriority = "51";
   STATE = "osTcbTaskState[13]";
   STACK = "osTaskStackAppl108";
   vs_Schedule = "FULL-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[13]";
   vs_MaxActivations = "1";
   CONTEXT="13";
};   /* Task_100ms_Appl10*/

TASK osSystemBasicTask {
   PRIORITY = "osTcbActualPrio[14]";
   vs_HomePriority = "0";
   STATE = "osTcbTaskState[14]";
   STACK = "osTaskStackosSystemApplicationCore01";
   vs_Schedule = "NON-Preempt";
   vs_TaskType = "BASIC";
   vs_WaitMask = "0";
   vs_EventFlag = "0";
   CURRENTACTIVATIONS = "osTcbActivationCount[14]";
   vs_MaxActivations = "2";
   CONTEXT="14";
};   /* osSystemBasicTask*/

CONTEXT Context_osSystemExtendedTask {
   VALID = "((osTcbTaskState[0] == 2) || (osTcbTaskState[0] == 3))";
};   /* Context for Task: osSystemExtendedTask*/

CONTEXT Context_Task_InitBsw_Appl10 {
   VALID = "((osTcbTaskState[1] == 2) || (osTcbTaskState[1] == 3))";
};   /* Context for Task: Task_InitBsw_Appl10*/

CONTEXT Context_Task_Init_Appl10 {
   VALID = "((osTcbTaskState[2] == 2) || (osTcbTaskState[2] == 3))";
};   /* Context for Task: Task_Init_Appl10*/

CONTEXT Context_Task_Init_Appl6 {
   VALID = "((osTcbTaskState[3] == 2) || (osTcbTaskState[3] == 3))";
};   /* Context for Task: Task_Init_Appl6*/

CONTEXT Context_Task_Shutdown_Appl0 {
   VALID = "((osTcbTaskState[4] == 2) || (osTcbTaskState[4] == 3))";
};   /* Context for Task: Task_Shutdown_Appl0*/

CONTEXT Context_Task_4msBsw_Appl10 {
   VALID = "((osTcbTaskState[5] == 2) || (osTcbTaskState[5] == 3))";
};   /* Context for Task: Task_4msBsw_Appl10*/

CONTEXT Context_Task_2msTmplMonr_Appl10 {
   VALID = "((osTcbTaskState[6] == 2) || (osTcbTaskState[6] == 3))";
};   /* Context for Task: Task_2msTmplMonr_Appl10*/

CONTEXT Context_Task_2ms_Appl10 {
   VALID = "((osTcbTaskState[7] == 2) || (osTcbTaskState[7] == 3))";
};   /* Context for Task: Task_2ms_Appl10*/

CONTEXT Context_Task_2ms_Appl6 {
   VALID = "((osTcbTaskState[8] == 2) || (osTcbTaskState[8] == 3))";
};   /* Context for Task: Task_2ms_Appl6*/

CONTEXT Context_Task_4ms_Appl10 {
   VALID = "((osTcbTaskState[9] == 2) || (osTcbTaskState[9] == 3))";
};   /* Context for Task: Task_4ms_Appl10*/

CONTEXT Context_Task_10ms_Appl10 {
   VALID = "((osTcbTaskState[10] == 2) || (osTcbTaskState[10] == 3))";
};   /* Context for Task: Task_10ms_Appl10*/

CONTEXT Context_Task_10ms_Appl6 {
   VALID = "((osTcbTaskState[11] == 2) || (osTcbTaskState[11] == 3))";
};   /* Context for Task: Task_10ms_Appl6*/

CONTEXT Context_Task_10msBsw_Appl10 {
   VALID = "((osTcbTaskState[12] == 2) || (osTcbTaskState[12] == 3))";
};   /* Context for Task: Task_10msBsw_Appl10*/

CONTEXT Context_Task_100ms_Appl10 {
   VALID = "((osTcbTaskState[13] == 2) || (osTcbTaskState[13] == 3))";
};   /* Context for Task: Task_100ms_Appl10*/

CONTEXT Context_osSystemBasicTask {
   VALID = "((osTcbTaskState[14] == 2) || (osTcbTaskState[14] == 3))";
};   /* Context for Task: osSystemBasicTask*/

STACK osIntStackLevel13_c0 {
   SIZE = "512";
   BASEADDRESS = "osIntStackLevel13_c0";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osIntStackLevel14_c0 {
   SIZE = "512";
   BASEADDRESS = "osIntStackLevel14_c0";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osIntStackLevel15_c0 {
   SIZE = "1024";
   BASEADDRESS = "osIntStackLevel15_c0";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osIntStackLevel3_c0 {
   SIZE = "512";
   BASEADDRESS = "osIntStackLevel3_c0";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osSystemStack_c0 {
   SIZE = "1024";
   BASEADDRESS = "osSystemStack_c0";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl00 {
   SIZE = "1024";
   BASEADDRESS = "osTaskStackAppl00";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl100 {
   SIZE = "1024";
   BASEADDRESS = "osTaskStackAppl100";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl101 {
   SIZE = "2048";
   BASEADDRESS = "osTaskStackAppl101";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl102 {
   SIZE = "1024";
   BASEADDRESS = "osTaskStackAppl102";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl103 {
   SIZE = "768";
   BASEADDRESS = "osTaskStackAppl103";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl104 {
   SIZE = "2048";
   BASEADDRESS = "osTaskStackAppl104";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl105 {
   SIZE = "1024";
   BASEADDRESS = "osTaskStackAppl105";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl106 {
   SIZE = "1024";
   BASEADDRESS = "osTaskStackAppl106";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl107 {
   SIZE = "1024";
   BASEADDRESS = "osTaskStackAppl107";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl108 {
   SIZE = "1024";
   BASEADDRESS = "osTaskStackAppl108";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl60 {
   SIZE = "1024";
   BASEADDRESS = "osTaskStackAppl60";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl61 {
   SIZE = "1024";
   BASEADDRESS = "osTaskStackAppl61";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackAppl62 {
   SIZE = "2048";
   BASEADDRESS = "osTaskStackAppl62";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackosSystemApplicationCore00 {
   SIZE = "16";
   BASEADDRESS = "osTaskStackosSystemApplicationCore00";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

STACK osTaskStackosSystemApplicationCore01 {
   SIZE = "16";
   BASEADDRESS = "osTaskStackosSystemApplicationCore01";
   STACKDIRECTION = "DOWN";
   FILLPATTERN = "0xaaaaaaaa";
};

vs_Event osSystemEvent {
   vs_EventMask = "0x01";
};

ALARM Rte_Al_TE2_Task_10msBsw_Appl10_0_10ms {
   CYCLETIME = "osAlarmCycleTime[0]";
   vs_CycleTime_ms = "(osAlarmCycleTime[0]*2.00000)";
   ALARMTIME =  "(osAlarmTime[0]>osCounter[1]) ?    ((osAlarmTime[0]-osCounter[1]) *osAlarmActivated[0]) :    ((oskCounterMaxAllowedValue[1]+osAlarmTime[0]-osCounter[1]+1) *osAlarmActivated[0]) ";
   vs_AlarmTime_ms =  "(osAlarmTime[0]>osCounter[1]) ?    ((((osAlarmTime[0]-osCounter[1])*2.00000)) *osAlarmActivated[0]) :    ((((oskCounterMaxAllowedValue[1]+osAlarmTime[0]-osCounter[1]+1)*2.00000)) *osAlarmActivated[0]) ";
   ACTION = "ActivateTask Task_10msBsw_Appl10";
   COUNTER = "OsCounter";
   STATE = "(osAlarmActivated[0] == 0) ? 0 : 1";

};   /* Rte_Al_TE2_Task_10msBsw_Appl10_0_10ms*/

ALARM Rte_Al_TE2_Task_4msBsw_Appl10_0_4ms {
   CYCLETIME = "osAlarmCycleTime[1]";
   vs_CycleTime_ms = "(osAlarmCycleTime[1]*2.00000)";
   ALARMTIME =  "(osAlarmTime[1]>osCounter[1]) ?    ((osAlarmTime[1]-osCounter[1]) *osAlarmActivated[1]) :    ((oskCounterMaxAllowedValue[1]+osAlarmTime[1]-osCounter[1]+1) *osAlarmActivated[1]) ";
   vs_AlarmTime_ms =  "(osAlarmTime[1]>osCounter[1]) ?    ((((osAlarmTime[1]-osCounter[1])*2.00000)) *osAlarmActivated[1]) :    ((((oskCounterMaxAllowedValue[1]+osAlarmTime[1]-osCounter[1]+1)*2.00000)) *osAlarmActivated[1]) ";
   ACTION = "ActivateTask Task_4msBsw_Appl10";
   COUNTER = "OsCounter";
   STATE = "(osAlarmActivated[1] == 0) ? 0 : 1";

};   /* Rte_Al_TE2_Task_4msBsw_Appl10_0_4ms*/

ALARM Rte_Al_TE_Task_100ms_Appl10_0_100ms {
   CYCLETIME = "osAlarmCycleTime[2]";
   vs_CycleTime_ms = "(osAlarmCycleTime[2]*2.00000)";
   ALARMTIME =  "(osAlarmTime[2]>osCounter[1]) ?    ((osAlarmTime[2]-osCounter[1]) *osAlarmActivated[2]) :    ((oskCounterMaxAllowedValue[1]+osAlarmTime[2]-osCounter[1]+1) *osAlarmActivated[2]) ";
   vs_AlarmTime_ms =  "(osAlarmTime[2]>osCounter[1]) ?    ((((osAlarmTime[2]-osCounter[1])*2.00000)) *osAlarmActivated[2]) :    ((((oskCounterMaxAllowedValue[1]+osAlarmTime[2]-osCounter[1]+1)*2.00000)) *osAlarmActivated[2]) ";
   ACTION = "ActivateTask Task_100ms_Appl10";
   COUNTER = "OsCounter";
   STATE = "(osAlarmActivated[2] == 0) ? 0 : 1";

};   /* Rte_Al_TE_Task_100ms_Appl10_0_100ms*/

ALARM Rte_Al_TE_Task_10ms_Appl10_0_10ms {
   CYCLETIME = "osAlarmCycleTime[3]";
   vs_CycleTime_ms = "(osAlarmCycleTime[3]*2.00000)";
   ALARMTIME =  "(osAlarmTime[3]>osCounter[1]) ?    ((osAlarmTime[3]-osCounter[1]) *osAlarmActivated[3]) :    ((oskCounterMaxAllowedValue[1]+osAlarmTime[3]-osCounter[1]+1) *osAlarmActivated[3]) ";
   vs_AlarmTime_ms =  "(osAlarmTime[3]>osCounter[1]) ?    ((((osAlarmTime[3]-osCounter[1])*2.00000)) *osAlarmActivated[3]) :    ((((oskCounterMaxAllowedValue[1]+osAlarmTime[3]-osCounter[1]+1)*2.00000)) *osAlarmActivated[3]) ";
   ACTION = "ActivateTask Task_10ms_Appl10";
   COUNTER = "OsCounter";
   STATE = "(osAlarmActivated[3] == 0) ? 0 : 1";

};   /* Rte_Al_TE_Task_10ms_Appl10_0_10ms*/

ALARM Rte_Al_TE_Task_10ms_Appl6_0_10ms {
   CYCLETIME = "osAlarmCycleTime[4]";
   vs_CycleTime_ms = "(osAlarmCycleTime[4]*2.00000)";
   ALARMTIME =  "(osAlarmTime[4]>osCounter[1]) ?    ((osAlarmTime[4]-osCounter[1]) *osAlarmActivated[4]) :    ((oskCounterMaxAllowedValue[1]+osAlarmTime[4]-osCounter[1]+1) *osAlarmActivated[4]) ";
   vs_AlarmTime_ms =  "(osAlarmTime[4]>osCounter[1]) ?    ((((osAlarmTime[4]-osCounter[1])*2.00000)) *osAlarmActivated[4]) :    ((((oskCounterMaxAllowedValue[1]+osAlarmTime[4]-osCounter[1]+1)*2.00000)) *osAlarmActivated[4]) ";
   ACTION = "ActivateTask Task_10ms_Appl6";
   COUNTER = "OsCounter";
   STATE = "(osAlarmActivated[4] == 0) ? 0 : 1";

};   /* Rte_Al_TE_Task_10ms_Appl6_0_10ms*/

ALARM Rte_Al_TE_Task_2msTmplMonr_Appl10_0_2ms {
   CYCLETIME = "osAlarmCycleTime[5]";
   vs_CycleTime_ms = "(osAlarmCycleTime[5]*2.00000)";
   ALARMTIME =  "(osAlarmTime[5]>osCounter[1]) ?    ((osAlarmTime[5]-osCounter[1]) *osAlarmActivated[5]) :    ((oskCounterMaxAllowedValue[1]+osAlarmTime[5]-osCounter[1]+1) *osAlarmActivated[5]) ";
   vs_AlarmTime_ms =  "(osAlarmTime[5]>osCounter[1]) ?    ((((osAlarmTime[5]-osCounter[1])*2.00000)) *osAlarmActivated[5]) :    ((((oskCounterMaxAllowedValue[1]+osAlarmTime[5]-osCounter[1]+1)*2.00000)) *osAlarmActivated[5]) ";
   ACTION = "ActivateTask Task_2msTmplMonr_Appl10";
   COUNTER = "OsCounter";
   STATE = "(osAlarmActivated[5] == 0) ? 0 : 1";

};   /* Rte_Al_TE_Task_2msTmplMonr_Appl10_0_2ms*/

ALARM Rte_Al_TE_Task_2ms_Appl10_0_2ms {
   CYCLETIME = "osAlarmCycleTime[6]";
   vs_CycleTime_ms = "(osAlarmCycleTime[6]*2.00000)";
   ALARMTIME =  "(osAlarmTime[6]>osCounter[1]) ?    ((osAlarmTime[6]-osCounter[1]) *osAlarmActivated[6]) :    ((oskCounterMaxAllowedValue[1]+osAlarmTime[6]-osCounter[1]+1) *osAlarmActivated[6]) ";
   vs_AlarmTime_ms =  "(osAlarmTime[6]>osCounter[1]) ?    ((((osAlarmTime[6]-osCounter[1])*2.00000)) *osAlarmActivated[6]) :    ((((oskCounterMaxAllowedValue[1]+osAlarmTime[6]-osCounter[1]+1)*2.00000)) *osAlarmActivated[6]) ";
   ACTION = "ActivateTask Task_2ms_Appl10";
   COUNTER = "OsCounter";
   STATE = "(osAlarmActivated[6] == 0) ? 0 : 1";

};   /* Rte_Al_TE_Task_2ms_Appl10_0_2ms*/

ALARM Rte_Al_TE_Task_2ms_Appl6_0_2ms {
   CYCLETIME = "osAlarmCycleTime[7]";
   vs_CycleTime_ms = "(osAlarmCycleTime[7]*2.00000)";
   ALARMTIME =  "(osAlarmTime[7]>osCounter[1]) ?    ((osAlarmTime[7]-osCounter[1]) *osAlarmActivated[7]) :    ((oskCounterMaxAllowedValue[1]+osAlarmTime[7]-osCounter[1]+1) *osAlarmActivated[7]) ";
   vs_AlarmTime_ms =  "(osAlarmTime[7]>osCounter[1]) ?    ((((osAlarmTime[7]-osCounter[1])*2.00000)) *osAlarmActivated[7]) :    ((((oskCounterMaxAllowedValue[1]+osAlarmTime[7]-osCounter[1]+1)*2.00000)) *osAlarmActivated[7]) ";
   ACTION = "ActivateTask Task_2ms_Appl6";
   COUNTER = "OsCounter";
   STATE = "(osAlarmActivated[7] == 0) ? 0 : 1";

};   /* Rte_Al_TE_Task_2ms_Appl6_0_2ms*/

ALARM Rte_Al_TE_Task_4ms_Appl10_0_4ms {
   CYCLETIME = "osAlarmCycleTime[8]";
   vs_CycleTime_ms = "(osAlarmCycleTime[8]*2.00000)";
   ALARMTIME =  "(osAlarmTime[8]>osCounter[1]) ?    ((osAlarmTime[8]-osCounter[1]) *osAlarmActivated[8]) :    ((oskCounterMaxAllowedValue[1]+osAlarmTime[8]-osCounter[1]+1) *osAlarmActivated[8]) ";
   vs_AlarmTime_ms =  "(osAlarmTime[8]>osCounter[1]) ?    ((((osAlarmTime[8]-osCounter[1])*2.00000)) *osAlarmActivated[8]) :    ((((oskCounterMaxAllowedValue[1]+osAlarmTime[8]-osCounter[1]+1)*2.00000)) *osAlarmActivated[8]) ";
   ACTION = "ActivateTask Task_4ms_Appl10";
   COUNTER = "OsCounter";
   STATE = "(osAlarmActivated[8] == 0) ? 0 : 1";

};   /* Rte_Al_TE_Task_4ms_Appl10_0_4ms*/

ALARM osSystemAlarm {
   CYCLETIME = "osAlarmCycleTime[9]";
   vs_CycleTime_ms = "(osAlarmCycleTime[9]*1.00000)";
   ALARMTIME =  "(osAlarmTime[9]>osCounter[0]) ?    ((osAlarmTime[9]-osCounter[0]) *osAlarmActivated[9]) :    ((oskCounterMaxAllowedValue[0]+osAlarmTime[9]-osCounter[0]+1) *osAlarmActivated[9]) ";
   vs_AlarmTime_ms =  "(osAlarmTime[9]>osCounter[0]) ?    ((((osAlarmTime[9]-osCounter[0])*1.00000)) *osAlarmActivated[9]) :    ((((oskCounterMaxAllowedValue[0]+osAlarmTime[9]-osCounter[0]+1)*1.00000)) *osAlarmActivated[9]) ";
   ACTION = "IncrementCounter osSystemSWCounter";
   COUNTER = "osSystemSWCounter";
   STATE = "(osAlarmActivated[9] == 0) ? 0 : 1";

};   /* osSystemAlarm*/

RESOURCE RES_SCHEDULER {
   STATE = "(osResOccupationCounter[0] != 0) ? 1 : 0";
   LOCKER  = "(osResOccupationCounter[0] != 0) ? osResActualTask[0] : 0xFFFE";
   PRIORITY = "TASK: 60";
};

RESOURCE SHUTDOWN_ONGOING {
   STATE = "(osResOccupationCounter[1] != 0) ? 1 : 0";
   LOCKER  = "(osResOccupationCounter[1] != 0) ? osResActualTask[1] : 0xFFFE";
   PRIORITY = "TASK: 81";
};

RESOURCE osSystemResource {
   STATE = "(osResOccupationCounter[2] != 0) ? 1 : 0";
   LOCKER  = "(osResOccupationCounter[2] != 0) ? osResActualTask[2] : 0xFFFE";
   PRIORITY = "TASK: 0";
};

vs_SCHEDULETABLE osSystemSchT {
   vs_STATE = "osSTState[0]";
   vs_ScheduleTableNext = "osSTNextTable[0]";
   vs_ExpiryPointNext = "osSTCurrentIndex[0]";
};   /* osSystemSchT*/

vs_OS_Config RH850_P1M {
   vs_CC = "oskVersionVariant.ucSysVariant1 & 0x0003";
   vs_SCALABILITYCLASS = "oskVersionVariant.ucSysVariant2 & 0x0003";
   vs_STATUS_LEVEL = "(oskVersionVariant.ucSysVariant1 & 0x0004) >>2";
   vs_SCHEDULE = "(oskVersionVariant.ucSysVariant1 & 0x0018) >>3";
   vs_OS_MAJ_VERSION = "oskVersionVariant.ucSysVersionMaj";
   vs_OS_MIN_VERSION = "oskVersionVariant.ucSysVersionMin";
   vs_GEN_MAJ_VERSION = "oskVersionVariant.ucGenVersionMaj";
   vs_GEN_MIN_VERSION = "oskVersionVariant.ucGenVersionMin";
   vs_OSInternalChecks= "(oskVersionVariant.ucSysVariant1 & 0x0080)>>6";
   vs_STACKMONITORING = "(oskVersionVariant.ucSysVariant1 & 0x0020)>>5";
   vs_ScheduletablesUsed = "(oskVersionVariant.ucSysVariant2 & 0x0004)>>2";
   vs_HRSTUsed            = "(oskVersionVariant.ucSysVariant2 & 0x0008)>>3";
   vs_SynchronizationUsed = "(oskVersionVariant.ucSysVariant2 & 0x0010)>>4";
   vs_TimingProtectionUsed = "(oskVersionVariant.ucSysVariant2 & 0x0020)>>5";
};

