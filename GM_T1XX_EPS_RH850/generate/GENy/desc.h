/* -----------------------------------------------------------------------------
  Filename:    desc.h
  Description: Interface of CANdesc visible to any application.
                
                Manufacturer: General Motors
                EcuDocFile:   C:\Hari\Work\SynergyProjects\T1xx_Synergy\BuildPrep\07.02.01_Work\Z_Work_2_6561_8807\GM_T1XX_EPS_RH850\tools\GENy\EPS_T1XX_Nxtr_19.0.4_60.cdd
                Variant:      CommonDiagnostics

  Generated by CANdelaGen, Tue Feb 07 17:36:22 2017
 
 ----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
  C O P Y R I G H T
 -------------------------------------------------------------------------------
  Copyright (c) 2001-2013 by Vctr Informatik GmbH. All rights reserved.
 
  This software is copyright protected and proprietary to Vctr Informatik 
  GmbH.
  
  Vctr Informatik GmbH grants to you only those rights as set out in the 
  license conditions.
  
  All other rights remain with Vctr Informatik GmbH.
 -------------------------------------------------------------------------------
 ----------------------------------------------------------------------------- */

#if !defined(__DESC_H__)
#define __DESC_H__

/* -----------------------------------------------------------------------------
    &&&~ History
 ----------------------------------------------------------------------------- */

/* 
------------------------------------------------------------------------------------------------------------------------
                                             A U T H O R   I D E N T I T Y                                              
------------------------------------------------------------------------------------------------------------------------
Initials   Name                  Company                                                                                
---------- --------------------- ---------------------------------------------------------------------------------------
Ktw        Katrin Thurow         Vctr Informatik GmbH                                                                 
Mhe        Matthias Heil         Vctr Informatik GmbH                                                                 
Rpk        Patrick Rieder        Vctr Informatik GmbH                                                                 
Sa         Mishel Shishmanyan    Vctr Informatik GmbH                                                                 
------------------------------------------------------------------------------------------------------------------------
                                            R E V I S I O N   H I S T O R Y                                             
------------------------------------------------------------------------------------------------------------------------
Date       Version  Author Modification type Issue Id      Affects                        Description                    
---------- -------- ------ ----------------- ------------- ------------------------------ -------------------------------
2009-09-10  6.00.00
                    Sa     Fixed             ESCAN00022820 General Motors(KWP2000)        Compile error in desc.c function DescSetCommState
                    Sa     Fixed             ESCAN00037297 General Motors(KWP2000)        Periodic DPID scheduler overwritten if the new request
                    Sa     Fixed             ESCAN00033091 General Motors(KWP2000)        Unused signal handler generated
                    Sa     Fixed             ESCAN00037724 KWP2000                        Compiler warning for assignment of type array of vuint8* to vuint8*
                    Sa     Fixed             ESCAN00037724 KWP2000                        Compiler warning for assignment of type array of vuint8* to vuint8*
                    Sa     Fixed             ESCAN00028409 All                            No response on request         
                    Sa     Modified          ESCAN00029770 All                            Compiler warning for enumeration item with value 0xFF on enum-type = char
                    Sa     Added             ESCAN00030116 All                            Provide IsoTp-Callback prototypes in desc.h/danisisotp.h
                    Sa     Added             ESCAN00030087 All                            Support of internal diagnostic requests over IsoTP
                    Sa     Fixed             ESCAN00030981 All                            Switch to suppress multitiple addressing check
                    Sa     Fixed             ESCAN00029915 All                            CANdesc files can not be written
                    Sa     Modified          ESCAN00031158 All                            Ring-buffer feature enabled for non-ISO-TP DANIS drivers
                    Sa     Added             ESCAN00031156 All                            Added DANIS abstraction for testerId and comChannel
                    Ktw    Fixed             ESCAN00031533 All                            Compiler Warning: Unused variable tpTxChannel
                    Sa     Fixed             ESCAN00027182 All                            Compiler Warning: variable "svcInstFailedBytePosMask" is possibly uninitialized
                    Sa     Fixed             ESCAN00034934 All                            Wrong null-terminated and leading size byte string data object total length calculation
                    Ktw    Fixed             ESCAN00035554 All                            Null pointer access in DanisBoschTp
                    Sa     Modified          ESCAN00036996 All                            Switching between ANSI C and hardware optimized bit-type
                    Ktw    Added             ESCAN00037874 All                            Support multi identity mode - VSG
2009-01-11  6.01.00
                    Sa     Fixed             ESCAN00038468 General Motors(KWP2000)        UUDT data improperly copied for TMS320
                    Sa     Fixed             ESCAN00038825 KWP2000                        Compiler warning/error for wrong parameter passed
                    Ktw    Modified          ESCAN00040135 All                            CanChannelIdentityAssignment is generated in RAM section
2010-03-18  6.02.00
                    Ktw    Modified          ESCAN00039608 General Motors(KWP2000)        Remove duplicate generated macro kDescUudtConfirmTimeoutTicks
                    Ktw    Fixed             ESCAN00041576 All                            Compiler warning for constant expression in DescDispatcher
2010-05-07  6.03.00
                    Ktw    Fixed             ESCAN00042963 All                            DescCopyToCan API does not support CAN message buffers located in the gpage
2010-26-07  6.03.01
                    Ktw    Fixed             ESCAN00043315 General Motors(KWP2000)        Periodic reading data timing settings in GENtool are not used in CANdesc
                    Ktw    Fixed             ESCAN00044050 All                            Compiler warning: condition is always false
                    Ktw    Fixed             ESCAN00044118 All                            CANdesc task period not changeable
                    Ktw    Fixed             ESCAN00043273 All                            Unexpected generation error occurs
                    Ktw    Fixed             ESCAN00044197 All                            Not all buffers used in DANIS can be located in far RAM
2010-08-16  6.04.00
                    Ktw    Fixed             ESCAN00044528 All                            Compile errors in DanisIsoTp communication adapter
                    Ktw    Fixed             ESCAN00044371 All                            v_inc.h is not included in the generated DANIS adapter template
2011-01-11  6.05.00
                    Ktw    Fixed             ESCAN00045932 All                            Compile error on each usage of DescInterruptDisable/-Restore internal API
                    Ktw    Fixed             ESCAN00047741 All                            Adapt CANdesc TMS320 support for GENy enabled CANdriver
                    Ktw    Fixed             ESCAN00047355 All                            Memory mapping of FAR buffer support use incomplete description for paged memory µC
                    Ktw    Fixed             ESCAN00046410 All                            After ECU reset the diagnostic response is not transmitted after the function DescSendPosRespFBL has been called
2011-04-11  6.06.00
                    Mhe    Fixed             ESCAN00044281 General Motors(KWP2000)        Compile error for missing constant kDescOemNrcParamIdNotSupportedInSession
                    Mhe    Fixed             ESCAN00044333 General Motors(KWP2000)        Scheduler Timings does not fit (0xAA) to requirements
                    Mhe    Fixed             ESCAN00045711 General Motors(KWP2000)        CANdesc overwrites memory after redefining a dynamic DPID
                    Mhe    Fixed             ESCAN00045731 General Motors(KWP2000)        Service 0xA9 0x80/0x81 can not be executed immediately after the EndOfDtcReport UUDT message
                    Mhe    Fixed             ESCAN00045902 General Motors(KWP2000)        Service 0x22 (ReadDataById) will be rejected with NRC 0x31 by mistake, in case a secured DID is included
                    Mhe    Fixed             ESCAN00047431 General Motors(KWP2000)        Compiler warning: static symbol 'DescOemPostStartDisableAllDTCs' unused
                    Mhe    Added             ESCAN00044127 General Motors(KWP2000)        Service handlers for $10 $02 and $10 $03 must exist only if the corresponding service is enabled
                    Mhe    Added             ESCAN00050033 General Motors(KWP2000)        Support for GMW3110 v1.6       
                    Mhe    Modified          ESCAN00036927 All                            Allow parallel OBD support if only the TPMC DANIS adapter is available
                    Mhe    Added             ESCAN00044127 All                            Support for DANIS adapter specific available buffer size information to the application
                    Mhe    Added             ESCAN00048157 All                            Add Danis adapter for LinTp    
                    Ktw    Fixed             ESCAN00048636 All                            Error message references non-existent file 'ApplDesc.h'
2011-08-12  6.07.00
                    Ktw    Modified          ESCAN00051315 All                            API DescGetCurrentBusInfo should be usable for periodic transmission
                    Ktw    Added             ESCAN00052870 All                            Support Multiple Addressing (combination Normal and Extended Addressing)
2011-09-01  6.07.01
                    Ktw    Fixed             ESCAN00053204 General Motors(KWP2000)        Compile error: Wrong function name used  to Get NM status
                    Ktw    Fixed             ESCAN00053205 All                            Wrong function is called to get addressing type
2011-09-06  6.08.00
                    -      -                 -             -                              No relevant changes available in this version.
2011-09-24  6.08.01
                    Ktw    Fixed             ESCAN00053847 All                            No response is sent to a physical request
                    Ktw    Fixed             ESCAN00053042 All                            CANdesc sends UUDT responses with CAN IDs from other identities
2011-10-04  6.08.02
                    Ktw    Fixed             ESCAN00054014 General Motors(KWP2000)        Generator crash: Service 0x2a activated and no UUDT messages
                    Ktw    Added             ESCAN00054105 All                            Move some configuration defines of Service 0x2c and 0x2a to the header file
2011-10-25  6.09.00
                    -      -                 -             -                              No relevant changes available in this version.
2011-12-09  6.10.00
                    Ktw    Fixed             ESCAN00055282 General Motors(KWP2000)        Compile error: Too few arguments in call of IlNwmGetStatus
2011-12-29  6.10.01
                    Ktw    Fixed             ESCAN00055782 General Motors(KWP2000)        Compiler error:  unresolved external symbol _ApplDescSpontaneousResponseConfirmation
2012-01-13  6.10.02
                    -      -                 -             -                              No relevant changes available in this version.
2012-02-09  6.10.03
                    -      -                 -             -                              No relevant changes available in this version.
2012-02-23  6.11.00
                    Ktw    Fixed             ESCAN00057280 General Motors(KWP2000)        Compiler error: redeclaration of DescGetHiSpeedMode
                    Ktw    Added             ESCAN00057614 All                            Better error message if an Oem is not supported by CANdesc but supported in the datamodel
2012-04-18  6.11.01
                    -      -                 -             -                              No relevant changes available in this version.
2012-07-02  6.11.02
                    Ktw    Fixed             ESCAN00058439 General Motors(KWP2000)        Unneeded callbacks are generated in appdesc.c
2012-07-27  6.12.00
                    -      -                 -             -                              No relevant changes available in this version.
2012-10-27  6.12.01
                    Ktw    Modified          ESCAN00062366 All                            CANDesc on multiple channels: Support more than 4 channels 
2012-11-12  6.13.00
                    Ktw    Fixed             ESCAN00066330 General Motors(KWP2000)        Unsupported service $A5 subfunction results in NRC 0x12 when programming mode is active
2013-06-04  6.14.00
                    Rpk    Fixed             ESCAN00067274 General Motors(KWP2000)        On a S1 timeout in programming mode no reset is performed
2013-09-05  6.14.01
                    -      -                 -             -                              No relevant changes available in this version.
2013-09-27  6.15.00
                    Rpk    Fixed             ESCAN00067765 General Motors(KWP2000)        Compiler warning: unused variable g_descProgMode
                    Rpk    Fixed             ESCAN00068911 General Motors(KWP2000)        Compiler warning: DescHandleInternRcrRp was declared but never referenced
                    Rpk    Fixed             ESCAN00067422 KWP2000                        Compile error: DescCheckResponseRequiredOnFunc expects near pointer as parameter
2013-11-29  6.15.01
                    -      -                 -             -                              No relevant changes available in this version.
2014-01-10  6.15.02
                    Rpk    Fixed             ESCAN00072464 General Motors(KWP2000)        Infinite RCR-RP for service $AA with dynamically defined DPID on Tester Present timeout
                    Rpk    Fixed             ESCAN00072875 General Motors(KWP2000)        Response $60 is sent twice on tester present timeout if a $AA request was pending
2014-03-11  6.15.03
                    Rpk    Fixed             ESCAN00073862 General Motors(KWP2000)        Positive response instead of NRC 0x31 after requesting 0x2C service with supported and unsupported PIDs
                    Rpk    Fixed             ESCAN00074177 General Motors(KWP2000)        Service 0x2C: Requesting a DPID with a secured PID not allowed in the current security state leads to undefined behavior
------------------------------------------------------------------------------------------------------------------------
 */


/* -----------------------------------------------------------------------------
    &&&~ Includes
 ----------------------------------------------------------------------------- */

/* include of TP interface */
#include "tpmc.h"



/* -----------------------------------------------------------------------------
    &&&~ Configuration switches
 ----------------------------------------------------------------------------- */

#if defined (V_ENABLE_USE_DUMMY_STATEMENT)
/* Everything ok */
#else
# if defined (V_DISABLE_USE_DUMMY_STATEMENT)
  /* Everything ok */
# else
  /* Define compatibile switch in case of older tools */
#  define V_ENABLE_USE_DUMMY_STATEMENT
# endif
#endif

/* Gentool GENy will be supported. */
#define DESC_ENABLE_GENTOOL_GENY
/* Flashable ECU will not be supported. */
#define DESC_DISABLE_FLASHABLE_ECU
/* Vectors FBL will not be supported. */
#define DESC_DISABLE_VECTOR_FBL_USAGE
/* Far addressing of diagnostic buffer will not be supported. */
#define DESC_DISABLE_FAR_BUFFER
/* KWP2000 diagnostic protocol will be supported. */
#define DESC_ENABLE_PROTOCOL_KWP
/* UDS diagnostic protocol will not be supported. */
#define DESC_DISABLE_PROTOCOL_UDS
/* UDS diagnostic protocol will not be supported. */
#define DESC_DISABLE_PROTOCOL_UDS2012
/* Application debug monitoring will be supported. */
#define DESC_ENABLE_DEBUG_USER
/* Internal processes' debug monitoring will be supported. */
#define DESC_ENABLE_DEBUG_INTERNAL


#if (TP_USE_EXTENDED_ADDRESSING == kTpOn) || \
    defined (TP_ENABLE_NORMAL_FIXED_ADDRESSING) || \
    defined (TP_ENABLE_MIXED_29_ADDRESSING)
# define DESC_ENABLE_ACCESS_TESTER_ADDRESS_API
#endif

/* Transport layer type */
#if defined (TP_ENABLE_SINGLE_CHANNEL_TP)
# define DESC_USDTNET_DISABLE_MULTI_TP
# define DESC_USDTNET_ENABLE_SINGLE_TP_OPTIMIZED
#else
# define DESC_USDTNET_ENABLE_MULTI_TP
# define DESC_USDTNET_DISABLE_SINGLE_TP_OPTIMIZED
#endif

/* Inter-context network will be supported. */
#define DESC_ENABLE_DESCICN_SUPPORT
/* Inter-context network client resource lock will not be supported. */
#define DESC_USDTNET_DISABLE_TX_LOCK_DESCICN
/* Multi inter-context network will not be supported. */
#define DESC_USDTNET_DISABLE_MULTI_DESCICN
/* LongServiceExecution will not be supported. */
#define DESC_USDTNET_DISABLE_LONGSERVICE_SUPPORT
/* Ring buffer will not be supported. */
#define DESC_USDTNET_DISABLE_RING_BUFFER
/* Far RAM buffer will not be supported. */
#define DESC_USDTNET_DISABLE_FAR_BUFFER
/* Shared buffer multi client usage will not be supported. */
#define DESC_USDTNET_DISABLE_MULTI_OWNER_SHARED_BUFFER
/* Dynamic buffer usage will not be supported. */
#define DESC_USDTNET_DISABLE_DYNAMIC_BUFFER_LENGTH
/* Static buffer allocation */
#define DESC_USDTNET_ENABLE_VECTOR_ISO_TP

/* UUDT Network will be supported. */
#define DESC_ENABLE_UUDT_NET
/* UUDT mutli-bus will not be supported. */
#define DESC_UUDTNET_DISABLE_MULTI_BUS_SUPPORT
/* UUDT mutli-client will not be supported. */
#define DESC_UUDTNET_DISABLE_MULTI_CLIENT
/* UUDT dynamic CAN channels will be supported. */
#define DESC_UUDTNET_ENABLE_DYN_MULTICAN_SUPPORT
/* Enable if some of the resources shall be only once reserved until explicit release */
#define DESC_UUDTNET_DISABLE_DYN_LIFETIME_SUPPORT

/* By default enable the (zero) padding */
#define DESC_UUDTNET_ENABLE_MSG_PADDING

/* Optimization (future option) */
#define DESC_UUDTNET_DISABLE_DATALENGTH_USAGE

#define DESC_UUDTNET_DISABLE_DATA_QUEUE
/* Addressing information validation */
#define DESC_DISABLE_PHYSREQ_TA_CHECK
#define DESC_DISABLE_PHYSREQ_SA_CHECK
#define DESC_ENABLE_FUNCREQ_TA_CHECK
#define DESC_DISABLE_FUNCREQ_SA_CHECK

/* Principally enable response on functional request (optimization) */
#define DESC_ENABLE_RES_ON_FUNC_REQUEST
/* Check message DLC (must be 8 for OBD) */
#define DESC_DISABLE_FORCE_DLC_8
/* specify if in case of not fitting into the
* buffer request a negative response to be sent 
*/
#define DESC_DISABLE_NEGRES_ON_MSG_TOO_LONG
/* Do use the second path */
#define DESC_ENABLE_FUNC_RX_PATH

/* High-Speed programming will not be supported. */
#define DESC_DISABLE_HIGH_SPEED_SUPPORT
/* Check before message reception will not be supported. */
#define DESC_DISABLE_CHECK_MSG_RX_ACCEPTANCE
/* Spontaneous response will be supported. */
#define DESC_ENABLE_SPONTANEOUS_RES
/* Secured data transmission API will not be supported. */
#define DESC_DISABLE_SECURED_DATA_TRANSMISSION
/* Multi channel system will be supported. */
#define DESC_ENABLE_MULTI_CHANNEL_SUPPORT
#if defined (C_SINGLE_RECEIVE_CHANNEL) || defined (C_MULTIPLE_RECEIVE_CHANNEL)
/* Code-doubled CANdriver will not be supported. */
#define DESC_DISABLE_CODE_DOUBLED_DRIVER_API
#endif
#if !defined (C_SINGLE_RECEIVE_CHANNEL) && !defined (C_MULTIPLE_RECEIVE_CHANNEL)
/* Code-doubled CANdriver will be supported. */
#define DESC_ENABLE_CODE_DOUBLED_DRIVER_API
#endif
/* Parallel reception and rejection diagnostic service will not be supported. */
#define DESC_DISABLE_BUSY_REPEAT_RESPONDER
/* Additional OBD reception path will not be supported. */
#define DESC_DISABLE_OBD_FUNC_REQUEST
/* Parallel handling of OBD service will not be supported. */
#define DESC_DISABLE_PARALLEL_OBD
/* CCL usage */
#if defined (VGEN_ENABLE_CCL)
# define DESC_ENABLE_CCL_SUPPORT
#else
# define DESC_DISABLE_CCL_SUPPORT
#endif
/* Transport layer type */
#if defined (TP_ENABLE_SINGLE_CHANNEL_TP)
# define DESC_DISABLE_MULTI_TP
# define DESC_ENABLE_SINGLE_TP_OPTIMIZED
#else
# define DESC_ENABLE_MULTI_TP
# define DESC_DISABLE_SINGLE_TP_OPTIMIZED
#endif

/* Non-constant S1 timeout will not be supported. */
#define DESC_DISABLE_DYN_S1_TIMEOUT
/* TesterPresent monitoring will be supported. */
#define DESC_ENABLE_S1_TIME_MONITORING
/* No RCR-RP limitation will be used. */
#define DESC_DISABLE_RES_PENDING_TIME_LIMIT
#define DESC_DISABLE_RES_PENDING_COUNT_LIMIT
/* Application forced RCR-RP response transmission will be supported. */
#define DESC_ENABLE_FORCE_RCR_RP
#define DESC_DISABLE_OEM_HANDLING_ON_RCRRP_LIMIT_EXPIRATION
#define DESC_DISABLE_S1_ANY_SVC_RELOAD
#define DESC_ENABLE_S1_SINGLE_SVC_RELOAD

/* Automaticaly managed states will be supported. */
#define DESC_ENABLE_AUTO_STATES
/* Provides control of SID session check */
#define DESC_DISABLE_SESSION_CHECK_ON_SID_LEVEL

/* Support extended negative response (with additional data bytes) */
#define DESC_ENABLE_EXT_NEG_RES_CODE_HANDLING

/* Do send NRC for wrong security state only if none of the requested PIDs are supported in the security state */
/*#define DESC_ENABLE_PID_NRC_ALL_ON_WRONG_SECURITY_STATE*/
/* Not necessary for GM, because same Nrc for not supported and secured*/


/* Each main-handler will be called only once. The application shall take care about calling DescProcessingDone from somwhere at the end of the request process. */
#define DESC_DISABLE_MAINHANDLER_MULTICALL
#define DESC_DISABLE_INDIVIDUAL_MAINHANDLER_MULTICALL
#define DESC_DISABLE_PERMANENT_MAINHANDLER_MULTICALL
/* Request minimum length check will not be supported. */
#define DESC_DISABLE_MIN_REQ_LEN_CHECK
/* Any pre-Handler from the SvcInst table will be supported. */
#define DESC_ENABLE_PREHANDLER_USAGE
/* Any post-Handler from the SvcInst table will be supported. */
#define DESC_ENABLE_POSTHANDLER_USAGE
/* User (unknown) service-handler will not be supported. */
#define DESC_DISABLE_GENERIC_USER_SERVICE_SUPPORT
/* User (unknown) service post-handler will not be supported. */
#define DESC_DISABLE_GENERIC_USER_POST_HANDLER_SUPPORT
/* Do check addressing of request will be supported. */
#define DESC_ENABLE_ADDR_METHOD_CHECK
/* Do check all state groups on SID level. will not be supported. */
#define DESC_DISABLE_ALL_STATEGROUPS_SID_CHECK
/* Session check before format check will not be supported. */
#define DESC_DISABLE_SESSION_FORMAT_STATE_CHECK
/* Send all Nrcs after a pending was sent will not be supported. */
#define DESC_DISABLE_ALL_RES_AFTER_RCRRP
/* Handle DIDs not supported in current session as not supported will not be supported. */
#define DESC_DISABLE_SKIP_PID_ON_WRONG_SESSION
/* Do send NRC for wrong session only if none of the requested PIDs are supported in the session. will not be supported. */
#define DESC_DISABLE_PID_NRC_ALL_ON_WRONG_SESSION
/* Handle DIDs not supported in current security state as not supported will be supported. */
#define DESC_ENABLE_SKIP_PID_ON_WRONG_SECURITY_STATE
/* If OBD services are present enable conformance */
#if defined (DESC_ENABLE_OBD_FUNC_REQUEST)
# define DESC_ENABLE_OBDII_NR_CONFORMANCE
#endif

/* Is skip PID supported? */
#if defined (DESC_ENABLE_SKIP_PID_ON_WRONG_SESSION) || \
    defined (DESC_ENABLE_SKIP_PID_ON_WRONG_SECURITY_STATE)
# define DESC_ENABLE_SKIP_PID
#else
# define DESC_DISABLE_SKIP_PID
#endif

/* Pre-handlers will be supported. */
#define DESC_ENABLE_ANY_PREHANDLER_USAGE
/* Post-handlers will be supported. */
#define DESC_ENABLE_ANY_POSTHANDLER_USAGE
/* Use linear search for optimal runtime. */
#define DESC_DISABLE_BINARY_SVCINST_SEARCH
#define DESC_ENABLE_LINEAR_SVCINST_SEARCH
/* Sub-service protocol information will be supported. */
#define DESC_ENABLE_SUB_SVC_USAGE
/* Special NRC for subfuction not supported in active session will not be supported. */
#define DESC_DISABLE_NRC_SUBFUNCTION_WRONG_SESSION
/* Supported only for GMLAN and low speed ECU */
#if defined (DESC_ENABLE_HIGH_SPEED_SUPPORT) && \
    defined (NM_TYPE_GMLAN)
# define DESC_ENABLE_REQ_HISPEED_PROG
#else
# define DESC_DISABLE_REQ_HISPEED_PROG
#endif

/* Service "DisableAllDTCs" will not be supported. */
#define DESC_DISABLE_SERVICE_10_02
/* Service "EnableDTCsDuringDeviceControl" will not be supported. */
#define DESC_DISABLE_SERVICE_10_03
/* Communication control service will not be supported. */
#define DESC_DISABLE_COMM_CTRL
/* Programming session OEM handling will be supported. */
#define DESC_ENABLE_PROGRAMMING_SESSION
/* Stop session service will be supported. */
#define DESC_ENABLE_SERVICE_STOP_SESSION
/* Service $A9 will be supported. */
#define DESC_ENABLE_SERVICE_A9_SUPPORT
/* Sub-function $80 of SID $A9 will not be supported. */
#define DESC_DISABLE_SERVICE_A9_80_SUPPORT
/* Sub-function $81 of SID $A9 will be supported. */
#define DESC_ENABLE_SERVICE_A9_81_SUPPORT
/* Sub-function $82 of SID $A9 will not be supported. */
#define DESC_DISABLE_SERVICE_A9_82_SUPPORT
/* Security access service will not be supported. */
#define DESC_DISABLE_SECURITY_ACCESS
/* Unified PID management will not be supported. */
#define DESC_DISABLE_UNIFIED_PID_MGR
/* PidList mode simulation will not be supported. */
#define DESC_DISABLE_SIM_PID_LIST_MODE
/* PIDs pre-Handlers will not be supported. */
#define DESC_DISABLE_PID_PREHANDLER_USAGE
/* PIDs post-Handlers will not be supported. */
#define DESC_DISABLE_PID_POSTHANDLER_USAGE
/* Combinable PID with dynamic data length will not be supported. */
#define DESC_DISABLE_DYN_DID_RES_LENGTH
#define DESC_DISABLE_PID_SECURITY_FILTER
/* Routine control management will not be supported. */
#define DESC_DISABLE_ROUTINE_CONTROL_MODE
/* Scheduled DID will be supported. */
#define DESC_ENABLE_SCHEDULED
/* Multiple PID in single request will be supported. */
#define DESC_ENABLE_PID_LIST_MODE
/* Dynamically defined DIDs will not be supported. */
#define DESC_DISABLE_DYN_DEFINED_DID_MODE
/* Dynamically defined by Id DIDs will not be supported. */
#define DESC_DISABLE_DEF_DYN_ID_BY_PID
/* Dynamically defined by memory DIDs will not be supported. */
#define DESC_DISABLE_DEF_DYN_ID_BY_MEM
/* Dynamically defined DPIDs will be supported. */
#define DESC_ENABLE_DYN_DEFINED_DPID_MODE
/* ResponseOnEvent service will not be supported. */
#define DESC_DISABLE_ROE_SUPPORT
/* Ring-buffer handling will not be supported. */
#define DESC_DISABLE_RES_RINGBUFFER
/* Multi variants/ VSGs are supported will not be supported. */
#define DESC_DISABLE_MULTI_VARIANT


/* -----------------------------------------------------------------------------
    &&&~ Preprocessor constants (defines)
 ----------------------------------------------------------------------------- */

/* ##V_CFG_MANAGEMENT ##CQProject : Diag_CanDesc__core CQComponent : Implementation */
#define DIAG_CANDESC__CORE_VERSION                                   0x0615
#define DIAG_CANDESC__CORE_RELEASE_VERSION                           0x03
#define DESC_VERSION                                                 0x0615
#define DESC_RELEASE_VERSION                                         0x03
/* Desc generic return codes */
#define kDescOk                                                      ((vuint8)0x00)
#define kDescFailed                                                  ((vuint8)0x01)
/*  data type according to the CPU type */
#if defined( C_CPUTYPE_8BIT )
/* 8-Bit qualifier */
# ifndef vuint8_least
#  define vuint8_least                                               vuintx
# endif
# ifndef vsint8_least
#  define vsint8_least                                               vsintx
# endif
#else
# if defined( C_CPUTYPE_16BIT )
/* 16-Bit qualifier */
#  ifndef vuint8_least
#   define vuint8_least                                              vuintx
#  endif
#  ifndef vsint8_least
#   define vsint8_least                                              vsintx
#  endif
#  ifndef vuint16_least
#   define vuint16_least                                             vuintx
#  endif
#  ifndef vsint16_least
#   define vsint16_least                                             vsintx
#  endif

# else
#  if defined( C_CPUTYPE_32BIT )
/* 32-Bit qualifier */
#   ifndef vuint8_least
#    define vuint8_least                                             vuintx
#   endif
#   ifndef vsint8_least
#    define vsint8_least                                             vsintx
#   endif
#   ifndef vuint16_least
#    define vuint16_least                                            vuintx
#   endif
#   ifndef vsint16_least
#    define vsint16_least                                            vsintx
#   endif
#   ifndef vuint32_least
#    define vuint32_least                                            vuintx
#   endif
#   ifndef vsint32_least
#    define vsint32_least                                            vsintx
#   endif
#  endif
# endif
#endif

/* Default optimized types */
#ifndef vuint8_least
# define vuint8_least                                                vuint8
#endif
#ifndef vuint16_least
# define vuint16_least                                               vuint16
#endif
#ifndef vuint32_least
# define vuint32_least                                               vuint32
#endif

#ifndef vsint8_least
# define vsint8_least                                                vsint8
#endif
#ifndef vsint16_least
# define vsint16_least                                               vsint16
#endif
#ifndef vsint32_least
# define vsint32_least                                               vsint32
#endif

/* Optimized boolean type */
#ifndef vboolean
# define vboolean                                                    vuint8_least
#endif

#ifndef V_BOOL_TRUE
# define V_BOOL_TRUE                                                 (vboolean)1
#endif

#ifndef V_BOOL_FALSE
# define V_BOOL_FALSE                                                (vboolean)0
#endif
/* CANdesc API types use the CANdesc namings convention! */
#define kDescFalse                                                   V_BOOL_FALSE
#define kDescTrue                                                    V_BOOL_TRUE
#define DESC_IGNORE_UNREF_PARAM(paramName)                           ((void)paramName)

#if !defined (VUINT8_CAST)
# if defined ( C_COMP_COSMIC_HC08 ) || defined ( C_COMP_COSMIC_HC12 ) /* any cosmic cpu */
#  define VUINT8_CAST                                                (vuint8)
#  define VSINT8_CAST                                                (vsint8)
#  define VUINT16_CAST                                               (vuint16)
#  define VSINT16_CAST                                               (vsint16)
#  define CANBITTYPE_CAST                                            (vbittype)
#  define CANSINTCPUTYPE_CAST                                        (int)
#  define CANUINTCPUTYPE_CAST                                        (unsigned int)
# else
#  define VUINT8_CAST
#  define VSINT8_CAST
#  define VUINT16_CAST
#  define VSINT16_CAST
#  define CANBITTYPE_CAST
#  define CANSINTCPUTYPE_CAST
#  define CANUINTCPUTYPE_CAST
# endif /* ( C_COMP_COSMIC_HC08 ) || defined ( C_COMP_COSMIC_HC12 ) */
#endif

#if defined (V_MEMROM0)
/* new driver ok */
#else
# define V_MEMROM0
#endif


#if defined (V_MEMROM1)
/* new driver ok */
#else
# define V_MEMROM1
#endif

#if defined (V_MEMROM2)
/* new driver ok */
#else
# define V_MEMROM2                                                   MEMORY_ROM
#endif

#if defined (V_MEMROM3)
/* new driver ok */
#else
# define V_MEMROM3
#endif
#if defined (V_MEMRAM0)
/* new driver ok */
#else
# define V_MEMRAM0
#endif

#if defined (V_MEMRAM1)
/* new driver ok */
#else
# define V_MEMRAM1
#endif

#if defined (V_MEMRAM1_FAR)
/* new driver ok */
#else
# define V_MEMRAM1_FAR
#endif

#if defined (V_MEMRAM2)
/* new driver ok */
#else
# define V_MEMRAM2
#endif

#if defined (V_MEMRAM2_FAR)
/* new driver ok */
#else
# define V_MEMRAM2_FAR
#endif

#if defined (V_MEMRAM3)
/* new driver ok */
#else
# define V_MEMRAM3
#endif
/* Define of a DESC_CONST_MEM_ABSTRACT*/
#define DESC_CONST_MEM_ABSTRACT                                      const

/* Compile memory model abstraction */
#if defined(DESC_ENABLE_FAR_BUFFER)
/* Ram Pointer to Far Ram */
# define DESC_P2FARRAM(baseType)                                     V_MEMRAM1_FAR baseType V_MEMRAM2_FAR V_MEMRAM3_FAR *
/* DESC_CONSTP2FARRAM is only used as function parameter.
Therefore, DESC_CONST_MEM_ABSTRACT is defined to const and not
explicit mapped to the ROM*/
# define DESC_CONSTP2FARRAM(baseType)                                V_MEMRAM1_FAR baseType V_MEMRAM2_FAR V_MEMRAM3_FAR * DESC_CONST_MEM_ABSTRACT
# define DESC_PUBL_DEF_VAR_FAR(baseType)                             V_MEMRAM0 V_MEMRAM1_FAR baseType V_MEMRAM2_FAR V_MEMRAM3_FAR
# define DESC_PRVT_DEF_VAR_FAR(baseType)                             V_MEMRAM0 static V_MEMRAM1_FAR baseType V_MEMRAM2_FAR
# define DESC_PUBL_DECL_VAR_FAR(baseType)                            V_MEMRAM0 extern V_MEMRAM1_FAR baseType V_MEMRAM2_FAR
#else /*DESC_ENABLE_FAR_BUFFER*/
# define DESC_P2FARRAM(baseType)                                     V_MEMRAM1 baseType V_MEMRAM2 V_MEMRAM3 *
/* DESC_CONSTP2FARRAM is only used as function parameter.
Therefore, DESC_CONST_MEM_ABSTRACT is defined to const and not
explicit mapped to the ROM*/
# define DESC_CONSTP2FARRAM(baseType)                                V_MEMRAM1 baseType V_MEMRAM2 V_MEMRAM3 * DESC_CONST_MEM_ABSTRACT
# define DESC_PUBL_DEF_VAR_FAR(baseType)                             V_MEMRAM0 V_MEMRAM1 baseType V_MEMRAM2 V_MEMRAM3
# define DESC_PRVT_DEF_VAR_FAR(baseType)                             V_MEMRAM0 static V_MEMRAM1 baseType V_MEMRAM2
# define DESC_PUBL_DECL_VAR_FAR(baseType)                            V_MEMRAM0 extern V_MEMRAM1 baseType V_MEMRAM2
#endif

#if defined(DESC_API_CALL_TYPE)
#else
  /* No paging used. */
  #define DESC_API_CALL_TYPE
#endif

#if defined(DESC_API_CALLBACK_TYPE)
#else
  /* No paging used. */
  #define DESC_API_CALLBACK_TYPE
#endif

#if defined(TP_API_CALLBACK_TYPE)
#else
  /* No paging used. */
  #define TP_API_CALLBACK_TYPE
#endif

#if defined(DRV_API_CALLBACK_TYPE)
#else
  /* No paging used. */
  #define DRV_API_CALLBACK_TYPE
#endif

#if defined(DRV_API_CALL_TYPE)
#else
  /* No paging used. */
  #define DRV_API_CALL_TYPE
#endif

/* This magic number provides inter CANdesc generation process consistency check.All CANdesc files must have the same one. */
#define DESC_PUBLIC_INTERFACE_MAGIC_NUMBER                           22066
/* ---  Debug assertion codes  --- */
#define kDescAssertWrongTpTxChannel                                  0x00
#define kDescAssertCanBufferIsNullPointer                            0x01
#define kDescAssertIndexTableInvalidReference                        0x02
#define kDescAssertSvcTableUnreachableItem                           0x03
#define kDescAssertSvcTableInvalidReference                          0x04
#define kDescAssertSvcTableInconsistentNumber                        0x05
#define kDescAssertMissingMainHandler                                0x06
/* Obsolete: 
#define kDescAssertSFMsgTooLong                                      0x07
*/
#define kDescAssertInvalidContextId                                  0x08
#define kDescAssertSvcTableIndexOutOfRange                           0x09
#define kDescAssertSvcInstTableIndexOutOfRange                       0x0A
#define kDescAssertContextIdWasModified                              0x0B
/* Obsolete: 
#define kDescAssertContextPointerWasModified                         0x0C
#define kDescAssertWrongTpRxChannel                                  0x0D
*/
#define kDescAssertProcessingDoneCallAfterResFlushing                0x0E
#define kDescAssertTooLongSingleFrameResponse                        0x0F
/* Obsolete: 
#define kDescAssertIllegalTxModeState                                0x10
*/
#define kDescAssertApplLackOfConfirmation                            0x11
/* Obsolete: 
#define kDescAssertUnconfirmedSecureServiceUsed                      0x12
*/
#define kDescAssertZeroStateValue                                    0x13
/* Obsolete: 
#define kDescAssertSecureServiceFunctionallyRequested                0x14
#define kDescAssertInvalidCanChannel                                 0x15
*/
#define kDescAssertInvalidContextMode                                0x16
#define kDescAssertUnexpectedWriteIntoRingBuffer                     0x17
#define kDescAssertRingBufferWriteExceedsTheResLen                   0x18
/* Obsolete: 
#define kDescAssertIllegalUsageOfRingBufferWithPidListMode           0x19 
#define kDescAssertIllegalUsageOfNegativeResponse                    0x1A
*/
#define kDescAssertDiagnosticBufferOverflow                          0x1B
#define kDescAssertFuncReqWoResMayNotUseRingBuffer                   0x1C
/* Obsolete: 
#define kDescAssertContextChannelRelationLost                        0x1D
*/
#define kDescAssertSchedulerTimerEventWithoutAnyPID                  0x1E
#define kDescAssertSchedulerRingBufferIsActivated                    0x1F
/* Obsolete: 
#define kDescAssertSchedulerWrongContextMode                         0x20
*/
#define kDescAssertUnknownTpTransmissionType                         0x21
#define kDescAssertIllegalAddRequestCount                            0x22
#define kDescAssertNoSidCanBeReportedInIdleMode                      0x23
#define kDescAssertInvalidUsageOfForceRcrRpApi                       0x24
/* Obsolete: 
#define kDescAssertRoeResponderWrongContextMode                      0x25
*/
#define kDescAssertPidResLenToCddDefNotMatched                       0x26
#define kDescAssertPidResLenToCurrLinearFreeSpace                    0x27
#define kDescAssertMissingDataForTransmission                        0x28
#define kDescAssertSchedulerFreeCellNotFound                         0x29
#define kDescAssertInvalidStateParameterValue                        0x2A
#define kDescAssertNoFreeICNChannel                                  0x2B
#define kDescAssertInvalidDescICNClient                              0x2C
#define kDescAssertNoFreeMsgContext                                  0x2D
#define kDescAssertUnExpectedContextWithResponse                     0x2E
#define kDescAssertIllegalCallOfRingBufferCancel                     0x2F
#define kDescAssertIllegalUsageOfRingBufferOnSupprPosRes             0x30
#define kDescAssertWrongFblPosResParameterValue                      0x31 /* former 0xA1 */

#define kDescAssertRoeUnexpectedEventNRC                             0x32
#define kDescAssertRoeUnexpectedEventSid                             0x33
/* Obsolete
#define kDescAssertRoeGeneralTransmissionError                       0x34
#define kDescAssertRoeNumEventsIsEmpty                               0x35
*/
#define kDescAssertRoeUnexpectedEventType                            0x36

#define kDescAssertMemByAddrUnexpectedType                           0x37
#define kDescAssertRoeUnexpectedResultLength                         0x38

/* DescNet assertions numbers */
#define kDescNetAssertWrongIsoTpRxChannel                            0x40
#define kDescNetAssertWrongIsoTpTxChannel                            0x41
#define kDescNetAssertWrongBusType                                   0x42

#define kDescNetAssertIllegalPduId                                   0x43
#define kDescNetAssertIllegalResponseType                            0x44

#define kDescNetAssertUnexpectedLength                               0x45

/* DescICNNet assertions numbers */
#define kDescAssertDescIcnIllegalTargetPointer                       0x50


/* Page buffer assertion*/
#define kDescAssertPageBufferTooSmallForResponse                     0x60

/* up to 0x80 - desc core, up to 0x90 - RDPI, up to 0xA0 - RDI 
 */
#define kDescAssertUudtBufferAlreadyUnlocked                         0xA0
#define kDescAssertWrongUudtTransmitterHandle                        0xA1
#define kDescAssertUudtBufferStillLocked                             0xA2

/* Wrong post processing Id for programming mode */
#define kDescAssertIllegalPostProgModeId                             0xA3

/* -----------------------------------------------------------------------------
    &&&~ Negative response codes
 ----------------------------------------------------------------------------- */

#define kDescNrcGeneralReject                                        0x10
#define kDescNrcServiceNotSupported                                  0x11
#define kDescNrcSubfunctionNotSupported                              0x12
#define kDescNrcInvalidFormat                                        0x12
#define kDescNrcBusyRepeatRequest                                    0x21
#define kDescNrcConditionsNotCorrect                                 0x22
#define kDescNrcRequestSequenceError                                 0x22
#define kDescNrcRoutineNotCompleted                                  0x23
#define kDescNrcRequestOutOfRange                                    0x31
#define kDescNrcAccessDenied                                         0x33
#define kDescNrcInvalidKey                                           0x35
#define kDescNrcExceedNumOfAttempts                                  0x36
#define kDescNrcTimeDelayNotExpired                                  0x37
#define kDescNrcDownloadNotAccepted                                  0x40
#define kDescNrcImproperDownloadType                                 0x41
#define kDescNrcCantDownloadToAddress                                0x42
#define kDescNrcCantDownloadNumOfBytes                               0x43
#define kDescNrcUploadNotAccepted                                    0x50
#define kDescNrcImproperUploadType                                   0x51
#define kDescNrcCantUploadFromAddress                                0x52
#define kDescNrcCantUploadNumOfBytes                                 0x53
#define kDescNrcTransferSuspended                                    0x71
#define kDescNrcTransferAborted                                      0x72
#define kDescNrcIllegalAddressInBlockTransfer                        0x74
#define kDescNrcIllegalByteCountInBlockTransfer                      0x75
#define kDescNrcIllegalBlockTransferType                             0x76
#define kDescNrcBlockTransferDataChecksumError                       0x77
#define kDescNrcResponsePending                                      0x78
#define kDescNrcIncorrectByteCntDgBlockTransfer                      0x79
#define kDescNrcServiceNotSupportedInActiveMode                      0x80
#define kDescNrcSchedulerFull                                        0x81
#define kDescNrcVoltageRangeFault                                    0x83
#define kDescNrcProgramFailure                                       0x85
#define kDescNrcDeviceTypeError                                      0x89
#define kDescNrcReady_for_download_DTC_stored                        0x99
#define kDescNrcDeviceControlLimitExceeded                           0xE3


#define TP_CHANNEL_PARAM_TYPE                                        vuint8
#define TP_CHANNEL_RX_PARAM_NAME                                     tpRxChannel
#define TP_CHANNEL_TX_PARAM_NAME                                     tpTxChannel

#if defined (DESC_USDTNET_ENABLE_MULTI_TP)
/* rx */
# define TP_CHANNEL_RX_FORMAL_PARAM_DEF_ONLY                         TP_CHANNEL_PARAM_TYPE TP_CHANNEL_RX_PARAM_NAME
# define TP_CHANNEL_RX_PARAM_DEF_LOCAL                               TP_CHANNEL_RX_FORMAL_PARAM_DEF_ONLY;
# define TP_CHANNEL_RX_FORMAL_PARAM_DEF_FIRST                        TP_CHANNEL_RX_FORMAL_PARAM_DEF_ONLY,
# define TP_CHANNEL_RX_PARAM_IGNORE_UNREF                            DESC_IGNORE_UNREF_PARAM(TP_CHANNEL_RX_PARAM_NAME)
/* tx */
# define TP_CHANNEL_TX_FORMAL_PARAM_DEF_ONLY                         TP_CHANNEL_PARAM_TYPE TP_CHANNEL_TX_PARAM_NAME
# define TP_CHANNEL_TX_PARAM_DEF_LOCAL                               TP_CHANNEL_TX_FORMAL_PARAM_DEF_ONLY;
# define TP_CHANNEL_TX_FORMAL_PARAM_DEF_FIRST                        TP_CHANNEL_TX_FORMAL_PARAM_DEF_ONLY,
# define TP_CHANNEL_TX_PARAM_IGNORE_UNREF                            DESC_IGNORE_UNREF_PARAM(TP_CHANNEL_TX_PARAM_NAME)
#else
/* rx */
# define TP_CHANNEL_RX_FORMAL_PARAM_DEF_ONLY                         void
# define TP_CHANNEL_RX_PARAM_DEF_LOCAL
# define TP_CHANNEL_RX_FORMAL_PARAM_DEF_FIRST
# define TP_CHANNEL_RX_PARAM_IGNORE_UNREF
/* tx */
# define TP_CHANNEL_TX_FORMAL_PARAM_DEF_ONLY                         void
# define TP_CHANNEL_TX_PARAM_DEF_LOCAL
# define TP_CHANNEL_TX_FORMAL_PARAM_DEF_FIRST
# define TP_CHANNEL_TX_PARAM_IGNORE_UNREF
#endif

#define DESC_USDTNET_CONST_MEM_ABSTRACT                              const
/* Compile memory model abstraction */
#if defined(DESC_USDTNET_ENABLE_FAR_BUFFER)
/* Ram Pointer to Far Ram */
# define DESC_USDTNET_P2FARRAM(baseType)                             V_MEMRAM1_FAR baseType V_MEMRAM2_FAR V_MEMRAM3_FAR *
/* DESC_CONSTP2FARRAM is not used until now.
DESC_USDTNET_CONST_MEM_ABSTRACT is defined to const and not
explicit mapped to the ROM*/
# define DESC_USDTNET_CONSTP2FARRAM(baseType)                        V_MEMRAM1_FAR baseType V_MEMRAM2_FAR V_MEMRAM3_FAR * DESC_USDTNET_CONST_MEM_ABSTRACT
# define DESC_USDTNET_PUBL_DEF_VAR_FAR(baseType)                     V_MEMRAM0 V_MEMRAM1_FAR baseType V_MEMRAM2_FAR V_MEMRAM3_FAR
# define DESC_USDTNET_PRVT_DEF_VAR_FAR(baseType)                     V_MEMRAM0 static V_MEMRAM1_FAR baseType V_MEMRAM2_FAR
# define DESC_USDTNET_PUBL_DECL_VAR_FAR(baseType)                    V_MEMRAM0 extern V_MEMRAM1_FAR baseType V_MEMRAM2_FAR
#else /*DESC_USDTNET_ENABLE_FAR_BUFFER*/
# define DESC_USDTNET_P2FARRAM(baseType)                             V_MEMRAM1 baseType V_MEMRAM2 V_MEMRAM3 *
/* DESC_CONSTP2FARRAM is not used until now.
DESC_USDTNET_CONST_MEM_ABSTRACT is defined to const and not
explicit mapped to the ROM*/
# define DESC_USDTNET_CONSTP2FARRAM(baseType)                        V_MEMRAM1 baseType V_MEMRAM2 V_MEMRAM3 * DESC_USDTNET_CONST_MEM_ABSTRACT
# define DESC_USDTNET_PUBL_DEF_VAR_FAR(baseType)                     V_MEMRAM0 V_MEMRAM1 baseType V_MEMRAM2 V_MEMRAM3
# define DESC_USDTNET_PRVT_DEF_VAR_FAR(baseType)                     V_MEMRAM0 static V_MEMRAM1 baseType V_MEMRAM2
# define DESC_USDTNET_PUBL_DECL_VAR_FAR(baseType)                    V_MEMRAM0 extern V_MEMRAM1 baseType V_MEMRAM2
#endif

/* A special CAN channel value to mark free objects /channels*/
#define kDescUudtNetNoCanChannel                                     ((vuint8)(0xFF))

#define kDescUudtNetQueueSize                                        2
#define kDescUudtNetNumEcus                                          1
#define kDescUudtNetNumCanMsgs                                       2
#define kDescUudtNetConfTimeout                                      100
#define kDescUudtNetCycleCallTime                                    10
#define kDescNumCommChannels                                         2
#define kDescCanChannel                                              0
#define kDescNumContexts                                             3
#define kDescPrimBufferLen                                           825
#if defined (DESC_ENABLE_MULTI_CHANNEL_SUPPORT)
# define DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_ONLY                     vuint8_least commChannel
# define DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_FIRST                    DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_ONLY,
# define DESC_COMM_CHANNEL_PARAM_VALUE                               commChannel
# define DESC_COMM_CHANNEL_PARAM_ONLY                                commChannel
# define DESC_COMM_CHANNEL_PARAM_FIRST                               DESC_COMM_CHANNEL_PARAM_ONLY,
# define DESC_COMM_CHANNEL_LOCAL_PARAM_DEF                           DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_ONLY;
# define DESC_COMM_CHANNEL_PARAM_VALUE_INIT                          DESC_COMM_CHANNEL_PARAM_VALUE = kDescNumCommChannels
# define DESC_COMM_CHANNEL_PARAM_VALUE_DEC                           DESC_COMM_CHANNEL_PARAM_VALUE--
# define DESC_COMM_CHANNEL_LOOP                                      while(commChannel != 0)
# define DESC_COMM_CHANNEL_PARAM_WRAP_ONLY(channel)                  (channel)
# define DESC_COMM_CHANNEL_PARAM_WRAP_INDEX(channel)                 (channel)
#else
# define DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_ONLY                     void
# define DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_FIRST
# define DESC_COMM_CHANNEL_PARAM_ONLY
# define DESC_COMM_CHANNEL_PARAM_FIRST
# define DESC_COMM_CHANNEL_PARAM_VALUE                               0
# define DESC_COMM_CHANNEL_LOCAL_PARAM_DEF
# define DESC_COMM_CHANNEL_PARAM_VALUE_INIT
# define DESC_COMM_CHANNEL_PARAM_VALUE_DEC
# define DESC_COMM_CHANNEL_LOOP
# define DESC_COMM_CHANNEL_PARAM_WRAP_ONLY(channel)
# define DESC_COMM_CHANNEL_PARAM_WRAP_INDEX(channel)                 0
#endif

/* If more than one parallel request may be processed - use real context */
#if (kDescNumContexts > 1)
# define DESC_CONTEXT_PARAM_TYPE_ONLY                                vuint8                                                /* Used in CANdesc for function prototypes */
# define DESC_CONTEXT_PARAM_TYPE_FIRST                               vuint8,                                               /* Used in CANdesc for function prototypes */
# define DESC_CONTEXT_PARAM_VALUE                                    iContext                                              /* Used in CANdesc context accesses as "g_descMsgContext[DESC_CONTEXT_PARAM_VALUE].reqDataLen" in case the parameter is defined using the other optimization macros */
# define DESC_CONTEXT_PARAM_ONLY                                     iContext                                              /* Used in application/CANdesc functions as DescProcessingDone(DESC_CONTEXT_PARAM_ONLY), in case the parameter is defined using the other optimization macros */
# define DESC_CONTEXT_PARAM_FIRST                                    iContext,                                             /* Used in application/CANdesc functions as DescSetNegResponse(DESC_CONTEXT_PARAM_FIRST, kDescNrcCode), in case the parameter is defined using the other optimization macros */
# define DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY                          DESC_CONTEXT_PARAM_TYPE_ONLY DESC_CONTEXT_PARAM_ONLY  /* Used in application/CANdesc functions as DescProcessingDone(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);*/
# define DESC_CONTEXT_PARAM_DEF_LOCAL                                DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY;                   /* Used in functions as a local variable definition so it can be used with all other optimization macros */
# define DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST                         DESC_CONTEXT_PARAM_TYPE_ONLY DESC_CONTEXT_PARAM_ONLY, /* Used in application/CANdesc functions as ApplDescPostHandler(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST vuint8 status) */
# define DESC_CONTEXT_PARAM_WRAPPER_ONLY(contextConst)               contextConst                                          /* Used in call backs as DescProcessingDone(DESC_CONTEXT_PARAM_WRAPPER_ONLY(pMsgContext->iContext)) as universal ignore parameter macro */
# define DESC_CONTEXT_PARAM_WRAPPER_FIRST(contextConst)              contextConst,                                         /* Used in call backs as DescSetNegResponse(DESC_CONTEXT_PARAM_WRAPPER_FIRST(pMsgContext->iContext) kDescNrcConditionsNotCorrect) as universal ignore parameter macro */
# define DESC_CONTEXT_PARAM_WRAPPER_INDEX(contextConst)              contextConst                                          /* Used for accessing context specific tables */
# define DESC_CONTEXT_PARAM_DUMMY_USE                                DESC_IGNORE_UNREF_PARAM(DESC_CONTEXT_PARAM_ONLY)      /* Used to avoid compiler warnings for unreferenced variables */
#else
# define DESC_CONTEXT_PARAM_TYPE_ONLY                                void
# define DESC_CONTEXT_PARAM_TYPE_FIRST
# define DESC_CONTEXT_PARAM_VALUE                                    ((vuint8)0)
# define DESC_CONTEXT_PARAM_ONLY
# define DESC_CONTEXT_PARAM_FIRST
# define DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY                          void
# define DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST
# define DESC_CONTEXT_PARAM_DEF_LOCAL
# define DESC_CONTEXT_PARAM_WRAPPER_ONLY(contextConst)
# define DESC_CONTEXT_PARAM_WRAPPER_FIRST(contextConst)
# define DESC_CONTEXT_PARAM_WRAPPER_INDEX(contextConst)              0
# define DESC_CONTEXT_PARAM_DUMMY_USE
#endif

/* Diag connection number (in case of TPMC with DYN_ID usage) */
#if ! defined(kDescDiagConnection)
# define kDescDiagConnection                                         ((vuint8)0xF0)
#endif

#if ! defined(kDescDiagObdConnection)
# define kDescDiagObdConnection                                      ((vuint8)0xF1)
#endif

#if ! defined(kDescDiagAddConnection)
# define kDescDiagAddConnection                                      ((vuint8)0xF2)
#endif

/* -- Context specific activity states -- */
#define kDescContextIdle                                             ((DescContextActivity)0x00)
#define kDescContextActiveRxBegin                                    ((DescContextActivity)0x01)
#define kDescContextActiveRxEnd                                      ((DescContextActivity)0x02)
#define kDescContextActiveProcess                                    ((DescContextActivity)0x04)
#define kDescContextActiveProcessEnd                                 ((DescContextActivity)0x08)
#define kDescContextActiveTxReady                                    ((DescContextActivity)0x10)
#define kDescContextActiveTx                                         ((DescContextActivity)0x20)
#define kDescContextActivePostProcess                                ((DescContextActivity)0x40)

/* Any transmission is currently active */
#define kDescContextActiveRx                                         (DescContextActivity)(kDescContextActiveRxBegin | kDescContextActiveRxEnd)


/* ---  Addressing methods  --- */
#define kDescPhysReq                                                 ((vuint8)0x01)
#define kDescFuncReq                                                 ((vuint8)0x02)

#define kDescPrimContext                                             (vuint8) 0
#define kDescSecContext                                              (vuint8) 1
#define kDescReadDynDpidContext                                      (vuint8) 2
#define kDescEcuAddress                                              0x31
#define kDescVnDiagTimerTicks                                        800
#define kDescP2Ticks                                                 6
#define kDescP3maxTicks                                              499
#define kDescCallCycleUs                                             10000
#define kDescS1TimerTicks                                            500
#define kDescStateValueInvalid                                       (DescStateGroup)0xFFFF

/* CANdesc supports at maximum as many states pro StateGroup as given below: */
#define kDescMaxAllowedNumStates                                     16
#define kDescNumStateSecurity_Access                                 4
#define kDescStateSecurity_AccessLock_SPS                            ((DescStateGroup)0x01)
#define kDescStateSecurity_AccessUnlock_SPS                          ((DescStateGroup)0x02)
#define kDescStateSecurity_AccessLock_Device_Control                 ((DescStateGroup)0x04)
#define kDescStateSecurity_AccessUnlock_Device_Control               ((DescStateGroup)0x08)
#define kDescNumStateProgrammingMode                                 4
#define kDescStateProgrammingModeNormal                              ((DescStateGroup)0x01)
#define kDescStateProgrammingModeCommHalted                          ((DescStateGroup)0x02)
#define kDescStateProgrammingModeRequested                           ((DescStateGroup)0x04)
#define kDescStateProgrammingModeActive                              ((DescStateGroup)0x08)
/* ---- Communication states ---- */
#define kDescCommDisabled                                            0x01
#define kDescCommEnabled                                             0x02

/* ---- Programming states ---- */
#define kDescProgModeIdle                                            0x01
#define kDescProgModeAccepted                                        0x02
#define kDescProgModeActive                                          0x04

#if defined (DESC_ENABLE_REQ_HISPEED_PROG)
/* ---- Programming states ---- */
# define kDescHiSpeedModeIdle                                        0x01
# define kDescHiSpeedModeAccepted                                    0x02
# define kDescHiSpeedModeActive                                      0x04
#endif

/* Override defaults */
#define kDescOemNrcParamIdNotSupportedInSecurityState                kDescNrcRequestOutOfRange

/* Error free diagnsotic request process */
#define kDescNrcNone                                                 ((DescNegResCode)0x00)
#define kDescExtNrcNone                                              ((vuint16)0x0000)

/* ---  Post handler status masks --- */
#define kDescPostHandlerStateOk                                      ((vuint8)0x01)
#define kDescPostHandlerStateNegResSent                              ((vuint8)0x02)
#define kDescPostHandlerStateTxFailed                                ((vuint8)0x04)

/* Default BOOT state */
#define kDescPowerOnInitParam                                        (DescInitParam)0

/* till 0x80 are core assertion codes */
/* till 0x90 are RDPI assertion codes */
#define kDescAssertInvalidA9Mode                                     0x91

#define kDescRdpiDpidNumItems                                        5
#define kDescNumOfPeriodicPids                                       5
#define kDescRdpiSlowRateTicks                                       100
#define kDescRdpiMediumRateTicks                                     20
#define kDescRdpiFastRateTicks                                       2
#define kDescRdpiTableBottomOffset                                   31
#define kDescRdpiTableTopOffset                                      0
#define kDescRdpiDpidSearchTableSize                                 32
/* till 0x80 are core assertion codes */
#define kDescAssertInvalidDpidHandle                                 0x80
#define kDescAssertNoScheduledDpidsButSchedulingActive               0x81
#define kDescAssertDpidListInvalidReference                          0x82
#define kDescAssertDpidListInvalidCount                              0x83

#define kDescNumMaxPidList                                           5
/*  ***************** User defined switches *****************  */
#pragma ghs section bss=".osAppl_Appl6_bss"
#pragma ghs section sbss=".osAppl_Appl6_sbss"
#pragma ghs section data=".osAppl_Appl6_data"
#pragma ghs section sdata=".osAppl_Appl6_sdata"


/* -----------------------------------------------------------------------------
    &&&~ Datatype definitions
 ----------------------------------------------------------------------------- */

/* CANdesc internal boolean type (used for better code readability and code optimum) */
typedef vboolean DescBool;
#if defined (DESC_USE_ANSI_C_BIT_TYPE)
typedef unsigned int DescBitType;
#else
typedef vbittype     DescBitType;
#endif


typedef struct t_AddrInfoIsoTpTag
{
  vuint8  Dummy;

#if defined (TP_ENABLE_NORMAL_ADDRESSING)       || \
    defined (TP_ENABLE_MIXED_11_ADDRESSING)
# if defined (TP_ENABLE_DYNAMIC_CHANNELS)
  vuint16 TransmitID;
  vuint16 ReceiveID;
# else
# endif
#endif
#if (TP_USE_EXTENDED_ADDRESSING == kTpOn) || \
    defined (TP_ENABLE_NORMAL_FIXED_ADDRESSING) || \
    defined(TP_FUNC_ENABLE_EXTENDED_ADDRESSING) || \
    defined (TP_ENABLE_MIXED_29_ADDRESSING)
  vuint8 SourceAddress;
  vuint8 TargetAddress;
#endif
#if ( kCanNumberOfChannels > 1 ) /* more than one canChannel ? */
  vuint8 CanChannel;
#endif
#if (TP_USE_EXTENDED_ADDRESSING == kTpOn)
# if (TP_USE_MULTIPLE_BASEADDRESS == kTpOn)
  vuint16 BaseAddress;
# endif
#endif
} t_AddrInfoIsoTp;

typedef enum
{
  kDescIcnClientNone,
  kDescIcnClientDynDefDid,
  kDescIcnClientDynDefDpid,
  kDescIcnClientPeriodicDid,
  kDescIcnClientRoe
}t_DescClients;

typedef struct t_AddrInfoDescICNTag
{
  vuint8          SourceContext;
  vuint8          TargetContext;
  t_DescClients   Client;
} t_AddrInfoDescICN;

/* USDT Net result return type */
typedef enum
{
  kDescUsdtNetworkOk = 0,
  kDescUsdtNetworkFailed = 1,
  kDescUsdtNetBufferUnderrun = 2,
  kDescUsdtNetworkAbort = 3
} t_descUsdtNetResult;

/* CANdesc internal handle type */
typedef vuint8 t_descHandle;

/* USDT Net bus handle type */
typedef vuint8 t_descUsdtNetBusHandle;

typedef enum
{
  kDescUsdtNetReqTypePhysical,
  kDescUsdtNetReqTypeFunctional,
  kDescUsdtNetReqTypeInternal
} t_descUsdtNetReqType;

typedef enum
{
  kDescUsdtResponseNone,
  kDescUsdtResponsePositive,
  kDescUsdtResponseRingBuffer,
  kDescUsdtResponseNegative,
  kDescUsdtResponseNegativeRCR_RP,
  kDescUsdtResponseNegativeApplRCR_RP,
  kDescUsdtResponseRoe,
  kDescUsdtResponsePeriodic,
  kDescUsdtResponseSpontaneous,
  kDescUsdtResponseSpontaneousAppl
} t_descUsdtNetResType;


typedef DESC_USDTNET_P2FARRAM(vuint8) DescUsdtNetMsg;

typedef enum
{
  kDescUsdtNetBusTypeNone, 
  kDescUsdtNetBusTypeIsoTp, 
  kDescUsdtNetBusTypeDescICN
} t_descUsdtNetBusType;
typedef union t_descUsdtNetAddrInfoTag
{
  t_AddrInfoIsoTp isoTp;
  t_AddrInfoDescICN descICN;
} t_descUsdtNetAddrInfo;
typedef struct
{
  vuint8                comChannel; /* relevant only on multi-channel systems (e.g. multi CAN channels) */
  vuint8                testerId;   /* in some cases the tester address (ID) is from importance - store here if you have it */
  t_descUsdtNetBusType  busType;        /* from DescUsdtNetDispatcher.h */
  t_descUsdtNetAddrInfo addressingInfo; /* from DescUsdtNetDispatcher.h */
#if defined (DESC_USDTNET_ENABLE_DYNAMIC_BUFFER_LENGTH)
  vuint16               availBufferLength;
#endif
} t_descUsdtNetBus;

typedef vuint8                                        DescContextActivity;
typedef vuint8                                        DescMsgItem;

typedef DESC_P2FARRAM(DescMsgItem)                    DescMsg;
typedef DESC_CONSTP2FARRAM(DescMsgItem)               DescConstPtr;
typedef vuint16                                       DescMsgLen;

/* Some groups can have more than 8 states */
typedef unsigned int DescStateGroup;

/* Negative response codes is normally single Byte */
typedef vuint8 DescNegResCode;
/* Additional information about a request */
typedef struct
{
  DescBitType reqType   :2; /* 0x01: Phys 0x02: Func */
  DescBitType resOnReq  :2; /* 0x01: Phys 0x02: Func */
  DescBitType suppPosRes:1; /* 0x00: No   0x02: Yes  */
} DescMsgAddInfo;

/* Context information of a request */
typedef struct
{
  DescMsg             reqData;
  DescMsgLen          reqDataLen;
  DescMsg             resData;
  DescMsgLen          resDataLen;
  DescMsgAddInfo      msgAddInfo;
  DESC_CONTEXT_PARAM_DEF_LOCAL /* No iContext in non-parallel system */
  t_descUsdtNetBus    busInfo;
} DescMsgContext;

/* Main handler function pointer type */
typedef void DESC_API_CALL_TYPE (*DescMainHandler)     (DescMsgContext*);

#if defined (DESC_ENABLE_EXT_NEG_RES_CODE_HANDLING)
/* Additional error data to be sent with extended negative response */
typedef vuint16 DescExtNegResCode;
#endif

/* not used */
typedef vuint8 DescInitParam;

typedef struct
{
  vuint16 nextIterPos;
  vuint16 dtcNum;
  vuint8  failureTypeByte;
  vuint8  statusByte;
}DescRdiDtcRecord;

typedef enum
{
  kDescDataPacketOk = 0,
  kDescDataPacketFailedSendDummy,
  kDescDataPacketFailedDoNotSend
}DescDataPacketProcessStatus;



/* -----------------------------------------------------------------------------
    &&&~ Function prototypes
 ----------------------------------------------------------------------------- */

#if defined (TP_ENABLE_DYNAMIC_CHANNELS)
/* Rx path phys */
TP_MEMORY_MODEL_DATA vuint8* TP_API_CALLBACK_TYPE DescGetBuffer(TP_CHANNEL_RX_FORMAL_PARAM_DEF_FIRST vuint16 dataLength);
void    TP_API_CALLBACK_TYPE DescRxErrorIndication(TP_CHANNEL_RX_FORMAL_PARAM_DEF_FIRST vuint8 status);
void    TP_API_CALLBACK_TYPE DescPhysReqInd(TP_CHANNEL_RX_FORMAL_PARAM_DEF_FIRST vuint16 dataLen);

/* Rx path func */
# if defined(TP_FUNC_ENABLE_RECEPTION) && \
     !defined (TP_ENABLE_EXTENDED_ADDRESSING)
TP_MEMORY_MODEL_DATA vuint8* TP_API_CALLBACK_TYPE DescGetFuncBuffer(vuint16 dataLength);
void TP_API_CALLBACK_TYPE DescFuncReqInd(vuint16 dataLen);
# endif

/* Tx path */
vuint8 TP_API_CALLBACK_TYPE DescCopyToCAN(TpCopyToCanInfoStructPtr infoStruct);
vuint8 TP_API_CALLBACK_TYPE DescTxErrorIndication(TP_CHANNEL_TX_FORMAL_PARAM_DEF_FIRST vuint8 status);
void   TP_API_CALLBACK_TYPE DescConfirmation(TP_CHANNEL_TX_FORMAL_PARAM_DEF_FIRST vuint8 status);
#endif

#if defined (DESC_UUDTNET_ENABLE_TX_FAILED_SIM)
void DescUudtNetCanDoSimTxFailed(DescBool doSim);
#endif

#if defined (DESC_ENABLE_SPONTANEOUS_RES)
/* ---- Extended functionality ---- */
void DESC_API_CALL_TYPE DescTransmitSingleFrame(DescMsg resData, vuint8 resLen);
#endif

/* Reports the current diagnostic activity state (e.g. Idle, ActiveRx, ActiveProcess, ActiveTx.*/
DescContextActivity DESC_API_CALL_TYPE DescGetActivityState(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);

#if defined (DESC_ENABLE_ACCESS_TESTER_ADDRESS_API)
vuint8 DESC_API_CALL_TYPE DescGetTesterAddress(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
#endif

/*Get access to the current communication parameters */
t_descUsdtNetBus* DESC_API_CALL_TYPE DescGetCurrentBusInfo (DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);

#if defined (DESC_ENABLE_FORCE_RCR_RP)
/* Force CANdesc to send RCR-RP response */
void DESC_API_CALL_TYPE DescForceRcrRpResponse(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
#endif

/* activate tester present timeout monitoring 
 * through application call */
void DescActivateS1Timer(void);

#if defined (DESC_ENABLE_AUTO_STATES)
/* If needed - reset the whole state machine (only the states defined in the CDD!!!) */
void DESC_API_CALL_TYPE DescStateInit(void);
#endif

DescStateGroup DESC_API_CALL_TYPE DescGetStateSecurity_Access(void);
void DESC_API_CALL_TYPE DescSetStateSecurity_Access(DescStateGroup descState);
DescStateGroup DESC_API_CALL_TYPE DescGetStateProgrammingMode(void);
void DESC_API_CALL_TYPE DescSetStateProgrammingMode(DescStateGroup descState);
/* Reports the communication state (enabled disabled)*/
vuint8 DescGetCommState(void);
#if defined (DESC_ENABLE_PROGRAMMING_SESSION)
/* Reports the programming state */
vuint8 DescGetProgMode(void);
#endif
/* Reports the hi-speed state (on/off)*/
#if defined (DESC_ENABLE_REQ_HISPEED_PROG)
vuint8 DescGetHiSpeedMode(DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_ONLY);
#endif

#if defined(DESC_ENABLE_QNX_CONTEXT_SWITCH)
/* Context switch support */
void DescSetCommState(DESC_COMM_CHANNEL_FORMAL_PARAM_DEF_FIRST vuint8 state);
# if defined (DESC_ENABLE_PROGRAMMING_SESSION)
void DescSetProgMode(vuint8 state);
# endif
# if defined (DESC_ENABLE_REQ_HISPEED_PROG)
void DescSetHiSpeedMode(vuint8 state);
# endif
#endif

#if defined (DESC_ENABLE_MAINHANDLER_MULTICALL)
/* Use this function if you want your application to be polled for a certain service */
void DESC_API_CALL_TYPE DescStartRepeatedServiceCall(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST DescMainHandler mainHandler);
#endif
/* Activate linear response transmission */
void DESC_API_CALL_TYPE DescProcessingDone(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
/* Set a diagnostic error */
void DESC_API_CALL_TYPE DescSetNegResponse(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST DescNegResCode errorCode);
#if defined(DESC_ENABLE_GENERIC_USER_SERVICE_SUPPORT)
/* Returns the current service's Sid */
DescMsgItem DESC_API_CALL_TYPE DescGetServiceId(DESC_CONTEXT_FORMAL_PARAM_DEF_ONLY);
#endif

#if defined (DESC_ENABLE_EXT_NEG_RES_CODE_HANDLING)
void DescSetExtNegResponse(DESC_CONTEXT_FORMAL_PARAM_DEF_FIRST DescNegResCode errorCode, DescExtNegResCode  extErrorCode);
#endif

/* Initilize the CANdesc on PowerOnReset using this function */
void DESC_API_CALL_TYPE DescInitPowerOn(DescInitParam initParam);
/* Initilize the CANdesc if needed during the ECU  runtime using this function (status reset) */
void DESC_API_CALL_TYPE DescInit(DescInitParam initParam);

/* DescTask function must be call cyclically in the specified period of time */
void DESC_API_CALL_TYPE DescTask(void);

void DESC_API_CALL_TYPE DescTimerTask(void);
void DESC_API_CALL_TYPE DescStateTask(void);

/* $A9 $81 */
void DescRdiDtcStatusByMaskFound(DescRdiDtcRecord *pDtcReport);
void DescRdiDtcStatusByMaskNotFound(vuint8 dtcSam);

void DescDataPacketProcessingDone(DescDataPacketProcessStatus status);

/* Hi-performance processing */
#if defined (DESC_ENABLE_HIPERFORMANCE_DYNDID_MODE)
DescBool DescMayCallStateTaskAgain(void);
#endif



/* -----------------------------------------------------------------------------
    &&&~ ROM definitions
 ----------------------------------------------------------------------------- */

/* Version information */
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 g_descMainVersion;
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 g_descSubVersion;
V_MEMROM0 extern V_MEMROM1 vuint8 V_MEMROM2 g_descBugFixVersion;



/* -----------------------------------------------------------------------------
    &&&~ Macro definitions
 ----------------------------------------------------------------------------- */

#if defined (DESC_ENABLE_FAR_BUFFER)
/* Copy RAM->FAR RAM */
# define DescCopyNByteRAM(t,s,l)                                     (VStdMemCpyRamToFarRam((t),(s),(l)))
/* Copy ROM->FAR RAM */
# define DescCopyNByteROM(t,s,l)                                     (VStdMemCpyRomToFarRam((t),(s),(l)))

# define DescMsgCopyRamToRam(t,s,l)                                  (VStdMemCpyRamToRam((t),(s),(l)))
# define DescMsgCopyFarRamToRam(t,s,l)                               (VStdMemCpyFarRamToRam((t),(s),(l)))
# define DescMsgCopyRamToFarRam(t,s,l)                               (VStdMemCpyRamToFarRam((t),(s),(l)))
# define DescMsgCopyFarRamToFarRam(t,s,l)                            (VStdMemCpyFarRamToFarRam((t),(s),(l)))
# define DescMsgCopyRomToRam(t,s,l)                                  (VStdMemCpyRomToRam((t),(s),(l)))
# define DescMsgCopyRomToFarRam(t,s,l)                               (VStdMemCpyRomToFarRam((t),(s),(l)))
#else
/* TMS320 specifics */
# if defined (VStdMemCpyRamToRamElement)
#  define DescWrapCpyRamToRam(t,s,l)                                 (VStdMemCpyRamToRamElement((t),(s),(l)))
#  define DescWrapCpyRomToRam(t,s,l)                                 (VStdMemCpyRomToRamElement((t),(s),(l)))
# else
#  define DescWrapCpyRamToRam(t,s,l)                                 (VStdMemCpyRamToRam((t),(s),(l)))
#  define DescWrapCpyRomToRam(t,s,l)                                 (VStdMemCpyRomToRam((t),(s),(l)))
# endif
/* Copy RAM->RAM */
# define DescCopyNByteRAM(t,s,l)                                     (DescWrapCpyRamToRam((t),(s),(l)))
/* Copy ROM->RAM */
# define DescCopyNByteROM(t,s,l)                                     (DescWrapCpyRomToRam((t),(s),(l)))

# define DescMsgCopyRamToRam(t,s,l)                                  (DescWrapCpyRamToRam((t),(s),(l)))
# define DescMsgCopyFarRamToRam(t,s,l)                               (DescWrapCpyRamToRam((t),(s),(l)))
# define DescMsgCopyRamToFarRam(t,s,l)                               (DescWrapCpyRamToRam((t),(s),(l)))
# define DescMsgCopyFarRamToFarRam(t,s,l)                            (DescWrapCpyRamToRam((t),(s),(l)))
# define DescMsgCopyRomToRam(t,s,l)                                  (DescWrapCpyRomToRam((t),(s),(l)))
# define DescMsgCopyRomToFarRam(t,s,l)                               (DescWrapCpyRomToRam((t),(s),(l)))
#endif

/* Global initialization of the state machine */
#if defined (DESC_ENABLE_AUTO_STATES)
/* Func prototype is used */
#else
# define DescStateInit()                                             /* Not used */
#endif

/* Data assemble/deassemble macros */
/* compose from byte stream a 16 bit data */
#define DescMake16Bit(hiByte,loByte)                                 ((vuint16)((((vuint16)(hiByte))<<8)| \
                                                                     ((vuint16)(loByte))))
/* compose from byte stream a 32 bit data */
#define DescMake32Bit(hiHiByte,hiLoByte,loHiByte,loLoByte)           ((vuint32)((((vuint32)(hiHiByte))<<24)| \
                                                                     (((vuint32)(hiLoByte))<<16)| \
                                                                     (((vuint32)(loHiByte))<<8) | \
                                                                     ((vuint32)(loLoByte))))
/* decompose 16 bit data in byte stream */
#define DescGetHiByte(data)                                          ((vuint8)(((vuint16)(data))>>8))
#define DescGetLoByte(data)                                          ((vuint8)(data))

/* decompose 32 bit data in byte stream */
#define DescGetHiHiByte(data)                                        ((vuint8)(((vuint32)(data))>>24))
#define DescGetHiLoByte(data)                                        ((vuint8)(((vuint32)(data))>>16))
#define DescGetLoHiByte(data)                                        ((vuint8)(((vuint32)(data))>>8))
#define DescGetLoLoByte(data)                                        ((vuint8)(data))



#endif /* __DESC_H__ */
