/* file: C:/Hari/Work/SynergyProjects/T1xx_Synergy/BuildPrep/07.01.05_Work/Z_Work_1_8917_ShortTerm/GM_T1XX_EPS_RH850/generate/trustfct.h */
/* automatically generated by genRH850.exe, Version: 1.06 */
/* Configuration file: C:/Users/nz2654/AppData/Local/Temp/DaVinci/Cfg-1345187/Generation/Cfg_Gen-1484071352018-0/OsProxyFiles-1484072167553-0/Os_ActiveEcuC.arxml */
/* Generation time: Tue Jan 10 13:16:13 2017 */
/* Unlimited license CBD1400351 for Nxtr Automotive, Project License, EPS */
/* Implementation: RH850_P1M */
/* Version of general code: 9.01.06 */
/* MISRA RULE 19.15 not violated: The QAC-Tool states a violation of rule 19.15 with message 0883,
 * but there is a double include prevention and therefore the message is considered to be wrong. */
#if ! defined __TRUSTFCT_H__   /* PRQA S 0883 EOF */ 
#define __TRUSTFCT_H__
#if defined USE_QUOTE_INCLUDES
 #include "vrm.h"
#else
 #include <vrm.h>
#endif

#define osdVrmGenMajRelNum 1
#define osdVrmGenMinRelNum 6
#if defined USE_QUOTE_INCLUDES
 #include "vrm.h"
#else
 #include <vrm.h>
#endif

#define osd_TFCT_Adc0OutpInin 0
void Call_Adc0OutpInin(void);
void TRUSTED_Adc0OutpInin(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);
#define osd_TFCT_ApplXcpWrCmn 1
void Call_ApplXcpWrCmn(MTABYTEPTR os_arg_addr, vuint8 os_arg_size, const BYTEPTR os_arg_data);
void TRUSTED_ApplXcpWrCmn(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);

typedef struct
{
   MTABYTEPTR os_arg_addr;
   vuint8 os_arg_size;
   const BYTEPTR os_arg_data;
} osTFArgType_ApplXcpWrCmn;

#define osd_TFCT_CritRegInitChk 2
uint8 Call_CritRegInitChk(void);
void TRUSTED_CritRegInitChk(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);

typedef struct
{
   uint8 os_result;
} osTFArgType_CritRegInitChk;

#define osd_TFCT_CritRegPerChk 3
uint8 Call_CritRegPerChk(void);
void TRUSTED_CritRegPerChk(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);

typedef struct
{
   uint8 os_result;
} osTFArgType_CritRegPerChk;

#define osd_TFCT_DmaRegInin 4
void Call_DmaRegInin(void);
void TRUSTED_DmaRegInin(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);
#define osd_TFCT_DtsClnUp 5
void Call_DtsClnUp(void);
void TRUSTED_DtsClnUp(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);
#define osd_TFCT_DtsInin 6
void Call_DtsInin(uint32 os_arg_CrcHwIdxInReg, uint32 os_arg_CrcHwIdxOutReg);
void TRUSTED_DtsInin(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);

typedef struct
{
   uint32 os_arg_CrcHwIdxInReg;
   uint32 os_arg_CrcHwIdxOutReg;
} osTFArgType_DtsInin;

#define osd_TFCT_Fls_MainFunction 7
void Call_Fls_MainFunction(void);
void TRUSTED_Fls_MainFunction(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);
#define osd_TFCT_GetResource 8
void Call_GetResource(ResourceType os_arg_ResId);
void TRUSTED_GetResource(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);

typedef struct
{
   ResourceType os_arg_ResId;
} osTFArgType_GetResource;

#define osd_TFCT_IpgInin 9
void Call_IpgInin(void);
void TRUSTED_IpgInin(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);
#define osd_TFCT_NvM_MainFunction 10
void Call_NvM_MainFunction(void);
void TRUSTED_NvM_MainFunction(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);
#define osd_TFCT_NxtrWdgM_Init 11
void Call_NxtrWdgM_Init(void);
void TRUSTED_NxtrWdgM_Init(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);
#define osd_TFCT_ReleaseResource 12
void Call_ReleaseResource(ResourceType os_arg_ResId);
void TRUSTED_ReleaseResource(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);

typedef struct
{
   ResourceType os_arg_ResId;
} osTFArgType_ReleaseResource;

#define osd_TFCT_Spi_AsyncTransmit 13
Std_ReturnType Call_Spi_AsyncTransmit(Spi_SequenceType os_arg_Sequence);
void TRUSTED_Spi_AsyncTransmit(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);

typedef struct
{
   Spi_SequenceType os_arg_Sequence;
   Std_ReturnType os_result;
} osTFArgType_Spi_AsyncTransmit;

#define osSystemTrustedFunction 14
void TRUSTED_osSystemTrustedFunction(TrustedFunctionIndexType FunctionIndex, TrustedFunctionParameterRefType FunctionParams);


typedef union
{
   osTFArgType_ApplXcpWrCmn ApplXcpWrCmn_args;
   osTFArgType_CritRegInitChk CritRegInitChk_args;
   osTFArgType_CritRegPerChk CritRegPerChk_args;
   osTFArgType_DtsInin DtsInin_args;
   osTFArgType_GetResource GetResource_args;
   osTFArgType_ReleaseResource ReleaseResource_args;
   osTFArgType_Spi_AsyncTransmit Spi_AsyncTransmit_args;
} TrustedFunctionParameterType;

#endif /* ! defined __TRUSTFCT_H__ */
